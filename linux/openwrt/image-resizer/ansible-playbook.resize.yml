---

- name: resize
  vars:
    run_wsl: |
      ansible-playbook \
        --ask-become-pass \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../linux/openwrt/image-resizer/ansible-playbook.resize.yml
    OPENWRT_RELEASE: "{{ openwrt.image.builder.OPENWRT_RELEASE }}"
    OPENWRT_TARGET: "{{ openwrt.image.builder.OPENWRT_TARGET }}"
  vars_prompt:
    - name: prompt_path
      prompt: "input image path(img.gz/img)[use image-builder path with resizer.type from inventories]"
      private: no
      default:
    - name: prompt_size
      prompt: "input image size(like 512M)"
      private: no
      default: 512M
  hosts: localhost
  connection: local
  tasks:

    - name: install qemu-img
      become: true
      ansible.builtin.package:
        name:
          - qemu-utils
        state: present
      register: package_result
      until: "package_result is not failed"
      retries: 3
      delay: 5

    - name: set image_path
      when: prompt_path != ''
      ansible.builtin.set_fact:
        image_path: "{{ prompt_path }}"

    - when: prompt_path == ''
      block:

        - name: set image_path by inventory snapshots
          when: OPENWRT_RELEASE == 'snapshots'
          vars:
            _version: "{{ OPENWRT_TARGET }}"
            _name: "openwrt-imagebuilder-{{ _version }}.Linux-x86_64"
            _build_dir: "~/.openwrt/{{ _name }}@{{ openwrt.image.builder.BUILDER_NAME }}"
            _resize_type: "{{ openwrt.image.resizer.type }}"
            _build_filename: "openwrt-{{ _version }}-{{ _resize_type }}.img.gz"
          ansible.builtin.set_fact:
            image_path: "{{ _build_dir }}/{{ _build_filename }}"

        - name: set image_path by inventory releases
          when: OPENWRT_RELEASE != 'snapshots'
          vars:
            _version: "{{ OPENWRT_RELEASE }}-{{ OPENWRT_TARGET }}"
            _name: "openwrt-imagebuilder-{{ _version }}.Linux-x86_64"
            _build_dir: "~/.openwrt/{{ _name }}@{{ openwrt.image.builder.BUILDER_NAME }}"
            _resize_type: "{{ openwrt.image.resizer.type }}"
            _build_filename: "openwrt-{{ _version }}-{{ _resize_type }}.img.gz"
          ansible.builtin.set_fact:
            image_path: "{{ _build_dir }}/{{ _build_filename }}"

        - debug: msg="{{ image_path }}" verbosity=3

    - name: stat image_path
      ansible.builtin.stat:
        path: "{{ image_path }}"
      register: image_stat

    - name: realpath image_path
      ansible.builtin.set_fact:
        image_path: "{{ image_stat.stat.path }}"

    - when: image_path is regex('.gz$')
      block:

        - name: unarchive image gz
          ansible.builtin.shell:
            cmd: "gzip -dk {{ image_path }}"
            chdir: "{{ image_path | dirname }}"
          ignore_errors: yes
          # ansible.builtin.unarchive:
          #   src: "{{ image_path }}"
          #   dest: "{{ image_path | dirname }}"

        - name: realpath image_path
          ansible.builtin.set_fact:
            image_path: "{{ image_path | regex_replace('.gz$','') }}"

    - name: set image_size
      when: prompt_size != ''
      ansible.builtin.set_fact:
        image_size: "{{ prompt_size }}"

    - name: set image_size by inventory
      when: prompt_size == ''
      ansible.builtin.set_fact:
        image_size: "{{ openwrt.image.resizer.size }}"

    - name: resize image
      ansible.builtin.shell:
        cmd: "qemu-img resize -f raw {{ image_path }} {{ image_size }}"
      register: resize_result

    - name: print resize_result
      ansible.builtin.pause:
        seconds: 1
        prompt: |
          //////////////////////////////////////////////////
          {{ image_path }}
          {{ resize_result.stdout }}
          //////////////////////////////////////////////////
