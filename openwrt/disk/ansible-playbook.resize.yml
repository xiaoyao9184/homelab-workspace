---


- name: resize
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible \
        $PWD/../../../openwrt/disk/ansible-playbook.resize.yml
  hosts: openwrt
  roles:
    - gekmihesg.openwrt
  tasks: 

    - name: opkg install
      loop:
        - parted
        - lsblk
      opkg:
        update_cache: true
        name: "{{ item }}"
      ignore_errors: yes

    - name: get boot partition
      ansible.builtin.shell: sed -n -e "\|\s/boot\s.*$|{s///p;q}" /etc/mtab
      register: shell_boot

    - name: get boot disk
      ansible.builtin.shell: BOOT='{{ shell_boot.stdout }}' && echo ${BOOT%%[0-9]*}
      register: shell_disk

    - name: get next part
      ansible.builtin.shell: BOOT='{{ shell_boot.stdout }}' && echo $((${BOOT##*[^0-9]}+1))
      register: shell_part

    - name: fix parted 
      ansible.builtin.shell: | 
        (
          echo OK
          echo Fix
        ) | parted -l

    - name: resize partition
      ansible.builtin.shell: parted {{ shell_disk.stdout }} resizepart {{ shell_part.stdout }} 100%

    - name: get partition table
      ansible.builtin.shell: |
        parted -l | grep '^Partition Table' | awk '{split($0,t,": ");print t[2]}'
      register: shell_table

    - name: get partition uuid
      when: shell_table.stdout == 'gpt'
      ansible.builtin.shell: |
        lsblk -n -o PARTUUID {{ shell_disk.stdout }}{{ shell_part.stdout }}
      register: shell_uuid

    - name: replace grub uuid
      when: shell_table.stdout == 'gpt'
      ansible.builtin.shell: |
        sed -i -r -e "s|(PARTUUID=)\S+|\1{{ shell_uuid.stdout }}|g" /boot/grub/grub.cfg

    - name: reboot
      ansible.builtin.shell: "reboot"
      ignore_errors: yes
