---


- name: download
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible \
        $PWD/../../../openwrt/openclash/ansible-playbook.deploy.yml
  hosts: localhost
  connection: local
  tasks: 

    - name: clear dir
      ansible.builtin.file:
        path: "{{ playbook_dir }}/luci-app-openclash"
        state: absent

    - name: mkdir dir
      ansible.builtin.file:
        path: "{{ playbook_dir }}/luci-app-openclash"
        state: directory

    - name: get latest release
      ansible.builtin.uri:
        url: https://api.github.com/repos/vernesong/OpenClash/releases
        return_content: true
      register: json_reponse

    - name: download latest release
      ansible.builtin.get_url:
        url: "{{ json_reponse.json[0].assets[0].browser_download_url }}"
        dest: "{{ playbook_dir }}/luci-app-openclash/luci-app-openclash.ipk"

- name: deploy
  hosts: openwrt
  roles:
    - gekmihesg.openwrt
  tasks: 

    - name: opkg install
      loop:
        - bash
        - coreutils-nohup
        - curl
        - ca-certificates
        - ipset
        - ip-full
        - ruby
        - ruby-yaml
        - kmod-tun
        - kmod-inet-diag
        - unzip
        - luci-compat
        - luci
        - luci-base
      opkg:
        update_cache: true
        name: "{{ item }}"
      ignore_errors: yes

    - name: check fw4
      ansible.builtin.shell: command -v fw4
      register: opkg_fw4

    - name: check dnsmasq-full
      ansible.builtin.shell: opkg list-installed | grep 'dnsmasq-full' | awk '{print $1}'
      register: opkg_dnsmasq

    - name: check libcap-bin
      ansible.builtin.shell: opkg list-installed | grep 'libcap-bin' | awk '{print $1}'
      register: opkg_libcap

    - when: 
        - opkg_fw4.stdout == ''
      block:

        - name: opkg iptables
          opkg:
            name: iptables
          ignore_errors: yes

        - name: opkg iptables-mod-tproxy
          opkg:
            name: iptables-mod-tproxy
          ignore_errors: yes

        - name: opkg iptables-mod-extra
          opkg:
            name: iptables-mod-extra
          ignore_errors: yes

    - when: 
        - opkg_fw4.stdout != ''
      block:

        - name: opkg kmod-nft-tproxy
          opkg:
            name: kmod-nft-tproxy 
          ignore_errors: yes

    - when: 
        - opkg_dnsmasq.stdout == ''
      block:

        - name: opkg uninstall dnsmasq
          opkg:
            name: dnsmasq
            state: absent
          ignore_errors: yes

        - name: opkg install dnsmasq-full
          opkg:
            name: dnsmasq-full
          ignore_errors: yes

    - when: 
        - opkg_libcap.stdout == ''
      block: 

        - name: get distrib arch
          ansible.builtin.shell: cat /etc/openwrt_release | grep DISTRIB_ARCH | sed -E 's/DISTRIB_ARCH=.(.*)./\1/'
          register: distrib_arch

        - name: add opkg snapshots
          ansible.builtin.lineinfile:
            path: /etc/opkg/customfeeds.conf
            line: "src/gz openwrt_snapshots http://downloads.openwrt.org/snapshots/packages/{{ distrib_arch.stdout }}/base"

        - name: opkg libcap
          opkg:
            name: libcap
          ignore_errors: yes

        - name: opkg libcap-bin
          opkg:
            name: libcap-bin
          ignore_errors: yes

    - name: copy file
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/luci-app-openclash/luci-app-openclash.ipk" 
        dest: /tmp/luci-app-openclash.ipk
        mode: '0755'

    - name: install luci-app-openclash
      ansible.builtin.shell: opkg install /tmp/luci-app-openclash.ipk