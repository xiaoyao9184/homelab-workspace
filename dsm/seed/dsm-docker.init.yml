---


- name: dsm-docker.init|init _docker
  vars:
    default_pip:
      - jsondiff
      - jmespath

      - pyyaml
      - lxml
      - requests

      - docker
      - docker-compose
  ansible.builtin.set_fact:
    _docker:
      pip: "{{ system.pip | default(default_pip,true) }}"
      pip_install: "{{ pip.install | default('ansible',true) }}"

- name: dsm-docker.init|ensurepip pip
  become: true
  ansible.builtin.shell: python3 -m ensurepip

- name: dsm-docker.init|set pip sources
  when: pip.mirror is defined
  become: true
  ansible.builtin.shell: python3 -m pip config set global.index-url {{ pip.mirror }}

- name: dsm-docker.init|install pip package by shell
  become: true
  loop: "{{ _docker.pip }}"
  when: _docker.pip_install == 'shell'
  ansible.builtin.shell: "python3 -m pip install {{ item }}"
  register: pip_result
  until: "pip_result is not failed"
  retries: 3
  delay: 5

- name: dsm-docker.init|install pip package by ansible
  become: true
  loop: "{{ _docker.pip }}"
  when: _docker.pip_install == 'ansible'
  ansible.builtin.pip:
    name: "{{ item }}"
    state: latest
  register: pip_result
  until: "pip_result is not failed"
  retries: 3
  delay: 5

- name: dsm-docker.init|gather fact
  ansible.builtin.setup:

- name: dsm-docker.init|install docker spk from server
  become: true
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  ansible.builtin.shell: synopkg install_from_server Docker
  ignore_errors: true

# cant add to root group for access docker
# - name: dsm-docker.init|add user to docker
#   become: true
#   ansible.builtin.shell: "synogroup --add root {{ ansible_user_id }}"
#
# https://davejansen.com/manage-docker-without-needing-sudo-on-your-synology-nas/
- name: dsm-docker.init|stat docker api
  become: true
  ansible.builtin.stat:
    path: /var/run/docker.sock
  register: docker_stat

- when: docker_stat.stat.gr_name != 'docker'
  block:

  - name: dsm-docker.init|add docker group
    become: true
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
    ansible.builtin.shell: "synogroup --add docker"
    ignore_errors: true

  - name: dsm-docker.init|add user to docker group
    become: true
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
    ansible.builtin.shell: "synogroup --member docker {{ ansible_user_id }}"

  - name: dsm-docker.init|chown docker api
    become: true
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
    ansible.builtin.shell: "chown root:docker /var/run/docker.sock"
