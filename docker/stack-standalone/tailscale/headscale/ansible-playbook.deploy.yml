---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible \
        $PWD/../../../docker/stack-standalone/tailscale/headscale/ansible-playbook.deploy.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('',true) }}"
  hosts: docker-manager
  tasks: 

    - name: set ws_dir
      include_tasks: "{{ playbook_dir }}/../../../../.seed/ansible-tasks/ws-dir.set.yml"

    - name: set dir_name
      include_tasks: "{{ ws_dir }}/.seed/ansible-tasks/dir-name.set.yml"
      vars:
        name:
          high: 2

    - name: copy dir_path
      include_tasks: "{{ ws_dir }}/.seed/ansible-tasks/dir-path.copy.yml"

    - name: add external_net
      include_tasks: "{{ ws_dir }}/.seed/ansible-tasks/docker-network.overlay.yml"
      vars:
        net_name:
          - external_net-headscale

    - name: add stack service
      include_tasks: "{{ ws_dir }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: stack
          name: "{{ dir_name[0] }}"
          path: "{{ dir_path }}"
          files: 
            - "docker-compose-swarm.yml"

    - name: get container id
      shell: "docker ps -q -f label=com.docker.swarm.service.name={{ dir_name | join('_') }} | head -1"
      register: result_container_id
      until: "result_container_id.stdout != ''"
      retries: 1000
      delay: 10

    - name: create headscale apikey
      include_tasks: "{{ playbook_dir }}/ansible-tasks/apikey.create.yml"
      vars:
        _apikey:
          container_id: "{{ result_container_id.stdout }}"

    - name: create headscale namespace
      include_tasks: "{{ playbook_dir }}/ansible-tasks/namespace.create.yml"
      vars:
        _namespace:
          container_id: "{{ result_container_id.stdout }}"
          name: default

    - name: create headscale preauthkeys
      include_tasks: "{{ playbook_dir }}/ansible-tasks/preauthkeys.create.yml"
      vars:
        _preauthkeys:
          container_id: "{{ result_container_id.stdout }}"
          namespace: default
          expire: 240h

