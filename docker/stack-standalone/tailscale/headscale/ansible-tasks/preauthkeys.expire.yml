---

- name: headscale set preauthkeys
  ansible.builtin.set_fact:
    preauthkeys:
      container_id: "{{ _preauthkeys.container_id }}"

- when: _preauthkeys.key is undefined
  block:
    - name: headscale list namespace
      community.docker.docker_container_exec:
        container: "{{ preauthkeys.container_id }}"
        command: "headscale namespace list -o json"
      register: namespace_result

    - name: headscale set preauthkeys.namespace
      ansible.builtin.set_fact:
        preauthkeys: "{{ preauthkeys | combine(update, recursive=True) }}"
      vars:
        update:
          namespace: "{{ namespace_result.stdout | from_json | json_query('[].name') | default([], true) }}"

    - name: headscale list preauthkeys
      loop: "{{ preauthkeys.namespace }}"
      community.docker.docker_container_exec:
        container: "{{ preauthkeys.container_id }}"
        command: "headscale preauthkeys list -n {{ item }} -o json"
      register: preauthkeys_result

    - name: headscale print preauthkeys_result
      debug:
        var: preauthkeys_result

    - name: headscale set preauthkeys_list
      ansible.builtin.set_fact:
        preauthkeys_list: []

    - name: headscale add preauthkeys_list
      ansible.builtin.set_fact:
        preauthkeys_list: "{{ preauthkeys_list + (('{\"list\":' + item + '}') | from_json | json_query('list[].{namespace:namespace,key:key}')) }}"
      loop: "{{ preauthkeys_result.results | json_query('[].stdout') }}"

    - name: headscale set preauthkeys.key
      ansible.builtin.set_fact:
        preauthkeys: "{{ preauthkeys | combine(update, recursive=True) }}"
      vars:
        update:
          key: "{{ preauthkeys_list }}"

- name: headscale expire preauthkeys
  community.docker.docker_container_exec:
    container: "{{ preauthkeys.container_id }}"
    command: "headscale preauthkeys expire -n {{ item.namespace }} {{ item.key }}"
  loop: "{{ preauthkeys.key }}"
  register: preauthkeys_result

- name: headscale set preauthkeys.result
  ansible.builtin.set_fact:
    preauthkeys: "{{ preauthkeys | combine(update, recursive=True) }}"
  vars:
    update:
      result: "{{ preauthkeys_result | json_query('results[].{item: item,result: stdout}') }}"

- name: headscale print preauthkeys
  debug:
    var: preauthkeys

- name: headscale reset preauthkeys_result
  ansible.builtin.set_fact:
    preauthkeys_result: !!null
    preauthkeys_list: !!null