---

- name: headscale set namespace
  ansible.builtin.set_fact:
    namespace:
      container_id: "{{ _namespace.container_id }}"

- when: _namespace.name is undefined
  block:
    - name: headscale list namespace
      community.docker.docker_container_exec:
        container: "{{ namespace.container_id }}"
        command: "headscale namespace list -o json"
      register: namespace_result

    - name: headscale set namespace.name
      ansible.builtin.set_fact:
        namespace: "{{ namespace | combine(update, recursive=True) }}"
      vars:
        update:
          name: "{{ namespace_result.stdout | from_json | json_query('[].name') | default([], true) }}"

- name: headscale destroy namespace
  community.docker.docker_container_exec:
    container: "{{ namespace.container_id }}"
    command: "headscale namespace destroy {{ item }} --force"
  loop: "{{ namespace.name }}"
  register: namespace_result

- name: headscale set namespace.result
  ansible.builtin.set_fact:
    namespace: "{{ namespace | combine(update, recursive=True) }}"
  vars:
    update:
      result: "{{ namespace_result | json_query('results[].{item: item,result: stdout}') }}"

- name: headscale print namespace
  debug:
    var: namespace

- name: headscale reset namespace_result
  ansible.builtin.set_fact:
    namespace_result: !!null