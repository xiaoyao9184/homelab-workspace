---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --ask-become-pass \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../docker/stack-standalone/anyone-sonatype-nexus/ansible-playbook.deploy.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-nexus-node' if (groups['docker-nexus-node'] is defined) else 'docker' }}"
  tasks:

    - name: set ws
      include_tasks:
        file: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"
        # https://github.com/ansible/ansible/issues/72099
        apply:
          run_once: true

    - name: set dir
      include_tasks:
        file: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"
        apply:
          run_once: true

    - name: copy to dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dirs.push.yml"
      vars:
        dirs:
          sync:
            - src: "{{ dir.local }}/docker-compose-swarm.yml"
              dest: "{{ dir.remote }}/docker-compose-swarm.yml"
              delegate_to: "{{ groups['docker-manager'] | first }}"
              run_once: true
          cp: "{{ nexus.dir_push | default([],true) }}"

    - name: wait nfs mount
      when:
        - "'nfs-client' in group_names"
        - nexus.nfs_wait is defined
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/nfs-mount.wait.yml"
      vars:
        default:
          on_manager:
            point: "/nexus-data"
            mount: "/mnt/nfs/nexus-data"
            option: "vers=4,loud,rw,sync"
            unmount: true
        mounts: "{{ nexus.nfs_wait if (nexus.nfs_wait | length != 0) else default }}"

    - name: add external_vol
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-volumes.add.yml"
      vars:
        default:
          external_vol-nexus-data:
            driver: local
        volumes: "{{ nexus.vol | default(default,true) }}"

    - name: add external_net
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-networks.add.yml"
      vars:
        default:
          external_net-nexus:
            driver: overlay
            attachable: true
        networks: "{{ nexus.net | default(default,true) }}"

    # - name: add external_cfg
    #   include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-configs.add.yml"
    #   vars:
    #     configs: "{{ nexus.cfg | default([],true) }}"

    # - name: add external_sec
    #   include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-secrets.add.yml"
    #   vars:
    #     secrets: "{{ nexus.sec | default([],true) }}"

    - name: add swarm label
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-labels.add.yml"
      vars:
        labels: "{{ nexus.lab | default([],true) }}"

    - name: build env_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-envs.create.yml"
      vars:
        envs:
          - dest: "{{ dir.remote }}/external_env-all.env"
            data: "{{ nexus.env | default([],true) }}"
            mode: stack

    - name: add stack service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: stack
          name: "{{ dir.names[0] }}"
          path: "{{ dir.remote }}"
          files:
            - "docker-compose-swarm.yml"

    - name: wait host port
      include_tasks:
        file: "{{ ws.local }}/.seed/ansible-tasks/docker-port.wait.yml"
        apply:
          run_once: true
      vars:
        ports:
          - name: "{{ dir.names | join('_') }}"
            network: external_net-nexus
            type: stack
            hosts:
              nexus3: 8081

    - name: print admin password
      include_tasks: "{{ dir.local }}/admin-password/ansible-tasks.print.yml"
      vars:
        password:
          ws: "{{ ws }}"
          result: admin_password
