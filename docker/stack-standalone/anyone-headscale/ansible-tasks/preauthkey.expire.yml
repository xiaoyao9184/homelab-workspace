---


- name: preauthkey.expire|set _preauthkey
  run_once: true
  vars:
    name_default: anyone-headscale_headscale
    wait_default:
      name: "{{ name_default }}"
      retries: -1
      delay: 0
    wait_update: "{{ preauthkey.wait | default({}) }}"
  ansible.builtin.set_fact:
    _preauthkey:
      ws: "{{ preauthkey.ws }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      name: "{{ preauthkey.name | default(name_default) }}"
      # expire param
      #   key: ""
      #   user: ""
      param: "{{ preauthkey.param | default([]) | select() }}"
      # expire command
      #   param:
      #     key: ""
      #     user: ""
      #   command: ""
      command: []
      result: "{{ preauthkey.result | default('expire_result') }}"

- name: preauthkey.expire|wait service
  vars:
    services:
      - "{{ _preauthkey.wait }}"
  include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.wait.yml"

# autofill all user to parameters
- when: _preauthkey.param | length == 0
  block:

    - name: preauthkey.expire|list user
      vars:
        service:
          name: "{{ _preauthkey.name }}"
          command: headscale user list -o json
          result: _preauthkey_list_user_result
      include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"

    - name: preauthkey.expire|append user to _preauthkey.param
      run_once: true
      vars:
        user_result: "{{ _preauthkey_list_user_result | map(attribute='stdout') | map('from_json') | flatten }}"
        user_param: "{{ user_result | json_query('[].{user: name}') | default([],true) }}"
        update:
          param: "{{ _preauthkey.param + user_param }}"
      ansible.builtin.set_fact:
        _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"
        _preauthkey_list_user_result: !!null

# separate no 'key' parameters
- when: _preauthkey.param | selectattr('key','undefined') | length > 0
  block:

    - name: preauthkey.expire|map user to list user preauthkey command
      run_once: true
      loop: "{{ _preauthkey.param | selectattr('key','undefined') }}"
      vars:
        command_item: "headscale preauthkey list -u {{ item.user }} -o json"
        command_list: "{{ _preauthkey_by_user_command | default([],true) }}"
      when: item.user | default(None,true) != None
      ansible.builtin.set_fact:
        _preauthkey_by_user_command: "{{ command_list + [command_item] }}"

    - name: preauthkey.expire|batch list user preauthkey
      vars:
        service:
          name: "{{ _preauthkey.name }}"
          command: "{{ _preauthkey_by_user_command }}"
          result: _preauthkey_list_key_result
      when: service.command | default(None,true) != None
      include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"

    - name: preauthkey.expire|append key,user to _preauthkey.param
      run_once: true
      vars:
        preauthkey_result: "{{ _preauthkey_list_key_result | map(attribute='stdout') | map('from_json') | flatten }}"
        preauthkey_param: "{{ preauthkey_result | json_query('[].{key: key, user: user}') | default([],true) }}"
        update:
          param: "{{ _preauthkey.param + preauthkey_param }}"
      ansible.builtin.set_fact:
        _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"

    - name: preauthkey.expire|remove user from _preauthkey.param
      run_once: true
      vars:
        update:
          param: "{{ _preauthkey.param | selectattr('key','defined') }}"
      ansible.builtin.set_fact:
        _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"
        _preauthkey_by_user_command: !!null
        _preauthkey_list_key_result: !!null

- name: preauthkey.expire|map _preauthkey.param to command
  run_once: true
  loop: "{{ _preauthkey.param }}"
  vars:
    command_list: "{{ _preauthkey.command | default([],true) }}"
    command_item:
      param: "{{ item }}"
      command: "headscale preauthkey expire {{ item.key }} -u {{ item.user }} --force"
    update:
      command: "{{ command_list + [command_item] }}"
  ansible.builtin.set_fact:
    _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"

- name: preauthkey.expire|print _preauthkey
  run_once: true
  debug:
    var: _preauthkey

- name: preauthkey.expire|batch expire preauthkey
  vars:
    service:
      name: "{{ _preauthkey.name }}"
      command: "{{ _preauthkey.command | map(attribute='command') }}"
      result: _preauthkey_expire_result
  when: service.command | length > 0
  include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"

# _preauthkey_expire_result item is command
- name: preauthkey.expire|set _preauthkey.result
  run_once: true
  vars:
    list: "{{ _preauthkey_expire_result | json_query('[].{key: item,value: stdout_lines[-1]}') | default([],true) }}"
  ansible.builtin.set_fact:
    "{{ _preauthkey.result }}": "{{ list }}"
    _preauthkey_expire_result: !!null

- name: preauthkey.expire|print _preauthkey.result
  run_once: true
  debug:
    var: "{{ _preauthkey.result }}"

- name: preauthkey.expire|reset _preauthkey
  run_once: true
  ansible.builtin.set_fact:
    _preauthkey: !!null
