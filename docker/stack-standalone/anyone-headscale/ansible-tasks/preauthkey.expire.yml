---


- name: preauthkey.expire|set _preauthkey
  vars:
    wait_default:
      name: anyone-headscale_headscale
      retries: -1
      delay: 0
    wait_update: "{{ preauthkey.wait | default({}) }}"
    exec_default:
      name: anyone-headscale_headscale
      command: []
      result: exec_result
    exec_update: "{{ preauthkey.exec | default({}) }}"
  ansible.builtin.set_fact:
    _preauthkey:
      ws: "{{ preauthkey.ws }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      list_command: []
      key_user: "{{ preauthkey.key_user | default([]) | select() }}"
      exec: "{{ exec_default | combine(exec_update, recursive=True) }}"
      result: "{{ preauthkey.result | default('expire_result') }}"

- name: preauthkey.expire|wait service
  include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.wait.yml"
  vars:
    services:
      - "{{ _preauthkey.wait }}"

- when:
    - _preauthkey.key_user | length == 0
  block:

    - name: preauthkey.expire|list user
      include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          name: "{{ _preauthkey.exec.name }}"
          command: "headscale user list -o json"
          result: list_result

    - name: preauthkey.expire|append _preauthkey.key_user
      vars:
        user: "{{ list_result.stdout | from_json | json_query('[].{user: name}') | default([],true) }}"
        update:
          key_user: "{{ user }}"
      ansible.builtin.set_fact:
        _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"

- name: preauthkey.expire|separate _preauthkey.key_user
  vars:
    user: "{{ _preauthkey.key_user | selectattr('key','undefined') }}"
    key_user: "{{ _preauthkey.key_user | selectattr('key','defined') }}"
    update:
      key_user: "{{ key_user }}"
      user: "{{ user }}"
  ansible.builtin.set_fact:
    _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"

- when: _preauthkey.user | length > 0
  block:

    - name: preauthkey.expire|append _preauthkey.list_command
      loop: "{{ _preauthkey.user }}"
      vars:
        command_list: "{{ _preauthkey.list_command | default([],true) }}"
        command_item: "headscale preauthkey list -u {{ item.user }} -o json"
        update:
          list_command: "{{ command_list + [command_item] }}"
      ansible.builtin.set_fact:
        _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"

    - name: preauthkey.expire|list preauthkey
      include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          name: "{{ _preauthkey.exec.name }}"
          command: "{{ _preauthkey.list_command }}"
          result: list_result

    - name: preauthkey.expire|append _preauthkey.key_user
      loop: "{{ list_result.results }}"
      when: item.stdout != 'null'
      vars:
        key_user: "{{ item.stdout | from_json | json_query('[].{key: key, user: user}') | default([],true) }}"
        update:
          key_user: "{{ _preauthkey.key_user + key_user }}"
      ansible.builtin.set_fact:
        _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"

- name: preauthkey.expire|append _preauthkey.exec
  loop: "{{ _preauthkey.key_user }}"
  vars:
    command_list: "{{ _preauthkey.exec.command | default([],true) }}"
    command_item: "headscale preauthkey expire {{ item.key }} -u {{ item.user }} --force"
    update:
      exec:
        command: "{{ command_list + [command_item] }}"
  when: item != ''
  ansible.builtin.set_fact:
    _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"

- name: preauthkey.expire|print _preauthkey
  debug:
    var: _preauthkey

- name: preauthkey.expire|exec service
  include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
  vars:
    service: "{{ _preauthkey.exec }}"

# exec_result results item is command
- name: preauthkey.expire|set _preauthkey.result
  when:
    - exec_result is defined
    - exec_result.results is defined
  ansible.builtin.set_fact:
    "{{ _preauthkey.result }}": "{{ exec_result | json_query('results[].{key: item,value: stdout_lines[-1]}') | items2dict }}"

- name: preauthkey.expire|print _preauthkey.result
  debug:
    var: "{{ _preauthkey.result }}"

- name: preauthkey.expire|reset preauthkey_result
  ansible.builtin.set_fact:
    _preauthkey: !!null
