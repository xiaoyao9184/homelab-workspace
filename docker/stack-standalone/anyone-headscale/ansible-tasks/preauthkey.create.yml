---


- name: preauthkey.create|set _preauthkey
  run_once: true
  vars:
    name_default: anyone-headscale_headscale
    wait_default:
      name: "{{ name_default }}"
      retries: -1
      delay: 0
    wait_update: "{{ preauthkey.wait | default({}) }}"
  ansible.builtin.set_fact:
    _preauthkey:
      ws: "{{ preauthkey.ws }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      name: "{{ preauthkey.name | default(name_default) }}"
      # create param
      #   expire: ""
      #   user: ""
      param: "{{ preauthkey.param | default([{'expire':'240h','user':'default'}]) }}"
      # create command
      #   param:
      #     expire: ""
      #     user: ""
      #   command: ""
      command: []
      result: "{{ preauthkey.result | default('expire_result') }}"

- name: preauthkey.create|wait service
  vars:
    services:
      - "{{ _preauthkey.wait }}"
  include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.wait.yml"

- name: preauthkey.create|map _preauthkey.param tp command
  run_once: true
  loop: "{{ _preauthkey.param }}"
  vars:
    command_list: "{{ _preauthkey.command | default([],true) }}"
    command_item:
      param: "{{ item }}"
      command: "headscale preauthkey create -e {{ item.expire }} -u {{ item.user }} --reusable"
    update:
      command: "{{ command_list + [command_item] }}"
  ansible.builtin.set_fact:
    _preauthkey: "{{ _preauthkey | combine(update, recursive=True) }}"

- name: preauthkey.create|print _preauthkey
  run_once: true
  debug:
    var: _preauthkey

- name: preauthkey.create|batch create preauthkey
  vars:
    service:
      name: "{{ _preauthkey.name }}"
      command: "{{ _preauthkey.command | map(attribute='command') }}"
      result: _preauthkey_create_result
  when: service.command | length > 0
  include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"

# _preauthkey_create_result item is command
- name: preauthkey.create|set _preauthkey.result
  run_once: true
  vars:
    list: "{{ _preauthkey_create_result | json_query('[].{key: item,value: stdout_lines[-1]}') | default([],true) }}"
  ansible.builtin.set_fact:
    "{{ _preauthkey.result }}": "{{ list }}"
    _preauthkey_create_result: !!null

- name: preauthkey.create|print _preauthkey.result
  run_once: true
  debug:
    var: "{{ _preauthkey.result }}"

- name: preauthkey.create|reset _preauthkey
  run_once: true
  ansible.builtin.set_fact:
    _preauthkey: !!null
