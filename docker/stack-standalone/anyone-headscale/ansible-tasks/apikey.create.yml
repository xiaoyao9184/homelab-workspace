---


- name: apikey.create|set _apikey
  run_once: true
  vars:
    name_default: anyone-headscale_headscale
    wait_default:
      name: "{{ name_default }}"
      retries: -1
      delay: 0
    wait_update: "{{ apikey.wait | default({}) }}"
  ansible.builtin.set_fact:
    _apikey:
      ws: "{{ apikey.ws }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      name: "{{ apikey.name | default(name_default) }}"
      # create param
      #   count
      param: "{{ apikey.param | default(1) }}"
      # create command
      #   param: count
      #   command: ""
      command: []
      result: "{{ user.result | default('create_result') }}"

- name: apikey.create|wait service
  vars:
    services:
      - "{{ _apikey.wait }}"
  include_tasks: "{{ _apikey.ws.local }}/.seed/ansible-tasks/docker-service.wait.yml"

- name: apikey.create|append _apikey.exec
  run_once: true
  loop: "{{ range(0, (_apikey.param | int), 1) | list }}"
  vars:
    command_list: "{{ _apikey.command | default([],true) }}"
    command_item:
      param: "{{ item }}"
      command: "headscale apikey create"
    update:
      command: "{{ command_list + [command_item] }}"
  ansible.builtin.set_fact:
    _apikey: "{{ _apikey | combine(update, recursive=True) }}"

- name: apikey.create|print _apikey
  run_once: true
  debug:
    var: _apikey

- name: apikey.create|batch create apikey
  vars:
    service:
      name: "{{ _apikey.name }}"
      command: "{{ _apikey.command | map(attribute='command') }}"
      result: _apikey_create_result
  when: service.command | length > 0
  include_tasks: "{{ _apikey.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"

# _apikey_create_result item is command
- name: apikey.create|set _apikey.result
  run_once: true
  vars:
    list: "{{ _apikey_create_result | json_query('[].{key: item,value: stdout_lines[-1]}') | default([],true) }}"
  ansible.builtin.set_fact:
    "{{ _apikey.result }}": "{{ list }}"
    _apikey_create_result: !!null

- name: apikey.create|print _apikey.result
  run_once: true
  debug:
    var: "{{ _apikey.result }}"

- name: apikey.create|reset _apikey
  run_once: true
  ansible.builtin.set_fact:
    _apikey: !!null
