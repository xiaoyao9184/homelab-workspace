---


- name: apikey.create|set _apikey
  vars:
    wait_default:
      name: anyone-headscale_headscale
      retries: -1
      delay: 0
    wait_update: "{{ apikey.wait | default({}) }}"
    exec_default:
      name: anyone-headscale_headscale
      command: []
      result: exec_result
    exec_update: "{{ apikey.exec | default({}) }}"
  ansible.builtin.set_fact:
    _apikey:
      ws: "{{ apikey.ws }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      count: "{{ apikey.count | default(1) }}"
      exec: "{{ exec_default | combine(exec_update, recursive=True) }}"
      result: "{{ apikey.result | default('create_result') }}"

- name: apikey.create|wait service
  include_tasks: "{{ _apikey.ws.local }}/.seed/ansible-tasks/docker-service.wait.yml"
  vars:
    services:
      - "{{ _apikey.wait }}"

- name: apikey.create|append _apikey.exec
  loop: "{{ range(0, (_apikey.count | int), 1) | list }}"
  vars:
    command_list: "{{ _apikey.exec.command | default([],true) }}"
    command_item: "headscale apikey create"
    update:
      exec:
        command: "{{ command_list + [command_item] }}"
  ansible.builtin.set_fact:
    _apikey: "{{ _apikey | combine(update, recursive=True) }}"

- name: apikey.create|print _apikey
  debug:
    var: _apikey

- name: apikey.create|exec service
  include_tasks: "{{ _apikey.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
  vars:
    service: "{{ _apikey.exec }}"

# exec_result results item is command
- name: apikey.create|set _apikey.result
  when:
    - exec_result is defined
    - exec_result.results is defined
  ansible.builtin.set_fact:
    "{{ _apikey.result }}": "{{ exec_result | json_query('results[].stdout_lines[-1]') }}"

- name: apikey.create|print _apikey.result
  debug:
    var: "{{ _apikey.result }}"

- name: apikey.create|reset _apikey
  ansible.builtin.set_fact:
    _apikey: !!null
