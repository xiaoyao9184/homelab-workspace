---


- name: node.register|set _node
  run_once: true
  vars:
    name_default: anyone-headscale_headscale
    wait_default:
      name: "{{ name_default }}"
      retries: -1
      delay: 0
    wait_update: "{{ node.wait | default({}) }}"
  ansible.builtin.set_fact:
    _node:
      ws: "{{ node.ws }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      name: "{{ node.name | default(name_default) }}"
      # register param
      #   key: ""
      #   user: ""
      param: "{{ node.param }}"
      # register command
      #   param:
      #     key: ""
      #     user: ""
      #   command: ""
      command: []
      result: "{{ node.result | default('expire_result') }}"

- name: node.register|wait service
  vars:
    services:
      - "{{ _node.wait }}"
  include_tasks: "{{ _node.ws.local }}/.seed/ansible-tasks/docker-service.wait.yml"

- name: node.register|map _node.param tp command
  run_once: true
  loop: "{{ _node.param }}"
  vars:
    command_list: "{{ _node.command | default([],true) }}"
    command_item:
      param: "{{ item }}"
      command: "headscale node register --key {{ item.key }} -u {{ item.user }}"
    update:
      command: "{{ command_list + [command_item] }}"
  ansible.builtin.set_fact:
    _node: "{{ _node | combine(update, recursive=True) }}"

- name: node.register|print _node
  run_once: true
  debug:
    var: _node

- name: node.register|batch create node
  vars:
    service:
      name: "{{ _node.name }}"
      command: "{{ _node.command | map(attribute='command') }}"
      result: _node_register_result
  when: service.command | length > 0
  include_tasks: "{{ _node.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"

# _node_register_result item is command
- name: node.register|set _node.result
  run_once: true
  vars:
    list: "{{ _node_register_result | json_query('[].{key: item,value: stdout_lines[-1]}') | default([],true) }}"
  ansible.builtin.set_fact:
    "{{ _node.result }}": "{{ list }}"
    _node_register_result: !!null

- name: node.register|print _node.result
  run_once: true
  debug:
    var: "{{ _node.result }}"

- name: node.register|reset _node
  run_once: true
  ansible.builtin.set_fact:
    _node: !!null
