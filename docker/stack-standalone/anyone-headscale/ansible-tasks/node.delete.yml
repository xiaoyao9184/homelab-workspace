---


- name: node.delete|set _node
  vars:
    wait_default:
      name: anyone-headscale_headscale
      retries: -1
      delay: 10
    wait_update: "{{ node.wait | default({}) }}"
    exec_default:
      name: anyone-headscale_headscale
      command: []
      result: exec_result
    exec_update: "{{ node.exec | default({}) }}"
  ansible.builtin.set_fact:
    _node:
      ws: "{{ node.ws }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      list_command: []
      id: "{{ node.id | default([]) }}"
      user: "{{ node.user | default([]) }}"
      exec: "{{ exec_default | combine(exec_update, recursive=True) }}"
      result: "{{ node.result | default('expire_result') }}"

- name: node.delete|wait service
  include_tasks: "{{ _node.ws.local }}/.seed/ansible-tasks/docker-service.wait.yml"
  vars:
    services:
      - "{{ _node.wait }}"

- when:
    - _node.id | length == 0
    - _node.user | length == 0
  block:

    - name: node.delete|list user
      include_tasks: "{{ _node.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          name: "{{ _node.exec.name }}"
          command: "headscale user list -o json"
          result: list_result

    - name: node.delete|append _node.user
      vars:
        user: "{{ list_result.stdout | from_json | json_query('[].name') | default([],true) }}"
        update:
          user: "{{ user }}"
      ansible.builtin.set_fact:
        _node: "{{ _node | combine(update, recursive=True) }}"

- when: _node.user | length > 0
  block:

    - name: node.delete|append _node.list_command
      loop: "{{ _node.user }}"
      vars:
        command_list: "{{ _node.list_command | default([],true) }}"
        command_item: "headscale node list -u {{ item }} -o json"
        update:
          list_command: "{{ command_list + [command_item] }}"
      ansible.builtin.set_fact:
        _node: "{{ _node | combine(update, recursive=True) }}"

    - name: node.delete|list node
      include_tasks: "{{ _node.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          name: "{{ _node.exec.name }}"
          command: "{{ _node.list_command }}"
          result: list_result

    - name: _node.delete|append _node.id
      loop: "{{ list_result.results }}"
      when: item.stdout != 'null'
      vars:
        key: "{{ item.stdout | from_json | json_query('[].id') | default([],true) }}"
        update:
          id: "{{ _node.id + id }}"
      ansible.builtin.set_fact:
        _node: "{{ _node | combine(update, recursive=True) }}"

- name: node.expire|append _node.exec
  loop: "{{ _node.id }}"
  vars:
    command_list: "{{ _node.exec.command | default([],true) }}"
    command_item: "headscale node delete --identifier {{ item }} --force"
    update:
      exec:
        command: "{{ command_list + [command_item] }}"
  ansible.builtin.set_fact:
    _node: "{{ _node | combine(update, recursive=True) }}"

- name: node.delete|print _node
  debug:
    var: _node

- name: node.delete|exec service
  include_tasks: "{{ _node.ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
  vars:
    service: "{{ _node.exec }}"

- name: node.delete|set _node.result
  when:
    - exec_result is defined
    - exec_result.results is defined
  ansible.builtin.set_fact:
    "{{ _node.result }}": "{{ exec_result | json_query('results[].{key: item,value: stdout_lines[-1]}') | items2dict }}"

- name: node.delete|print _node.result
  debug:
    var: "{{ _node.result }}"

- name: node.delete|reset _node
  ansible.builtin.set_fact:
    _node: !!null
