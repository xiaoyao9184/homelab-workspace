---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --ask-become-pass \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../docker/stack-standalone/anyone-domoticz-domoticz/ansible-playbook.deploy.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-domoticz-node' if (groups['docker-domoticz-node'] is defined) else 'docker' }}"
  tasks:

    - name: set ws
      include_tasks:
        file: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"
        # https://github.com/ansible/ansible/issues/72099
        apply:
          run_once: true

    - name: set dir
      include_tasks:
        file: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"
        apply:
          run_once: true

    - name: push to dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dirs.push.yml"
      vars:
        dirs:
          sync:
            - dest: "{{ dir.remote }}"
              delegate_to: "{{ groups['docker-manager'] | first }}"
              run_once: true
          cp: "{{ traefik.dir_push | default([],true) }}"

    - name: wait nfs mount
      when:
        - "'nfs-client' in group_names"
        - domoticz.nfs_wait is defined
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/nfs-mount.wait.yml"
      vars:
        default:
          on_manager:
            point: "/domoticz-userdata"
            mount: "/mnt/nfs/domoticz-userdata"
            option: "vers=4,loud,rw,sync"
            unmount: true
        mounts: "{{ domoticz.nfs_wait if (domoticz.nfs_wait | length != 0) else default }}"

    - name: add external_vol
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-volumes.add.yml"
      vars:
        default:
          external_vol-domoticz-userdata:
            driver: local
        volumes: "{{ domoticz.vol | default(default,true) }}"

    - name: add external_net
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-networks.add.yml"
      vars:
        default:
          external_net-domoticz:
            driver: overlay
            attachable: true
        networks: "{{ domoticz.net | default(default,true) }}"

    # - name: add external_cfg
    #   include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-configs.add.yml"
    #   vars:
    #     configs: "{{ domoticz.cfg | default([],true) }}"

    # - name: add external_sec
    #   include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-secrets.add.yml"
    #   vars:
    #     secrets: "{{ domoticz.sec | default([],true) }}"

    - name: add swarm label
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-labels.add.yml"
      vars:
        labels: "{{ domoticz.lab | default([],true) }}"

    - name: build env_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-envs.create.yml"
      vars:
        envs:
          - dest: "{{ dir.remote }}/external_env-all.env"
            data: "{{ domoticz.env | default([],true) }}"
            mode: stack

    - name: add stack service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: stack
          name: "{{ dir.names[0] }}"
          path: "{{ dir.remote }}"
          # files:
          #   - "docker-compose-swarm.yml"
          template:
            name: "docker-compose-swarm"
            opt:
              src: "{{ dir.local }}/docker-compose-swarm.yml.j2"
              dest: "{{ dir.remote }}/docker-compose-swarm.yml"
            vars:
              PORTS: "{{ domoticz.tmp.ports | default([],true) }}"

    - name: wait host port
      include_tasks:
        file: "{{ ws.local }}/.seed/ansible-tasks/docker-port.wait.yml"
        apply:
          run_once: true
      vars:
        ports:
          - name: "{{ dir.names | join('_') }}"
            network: external_net-domoticz
            type: stack
            hosts:
              domoticz: 8080

    - name: wait swarm service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-service.wait.yml"
      vars:
        services:
          - name: "{{ dir.names | join('_') }}_domoticz"
            retries: -1
            delay: 10

    - name: exec in domoticz
      loop: "{{ domoticz.exec | default([],true) }}"
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          name: "{{ dir.names | join('_') }}_domoticz"
          # https://stackoverflow.com/questions/59701804/obtain-shared-runners-token-gitlab-api
          command: "{{ item }}"
          result: "domoticz_exec"
