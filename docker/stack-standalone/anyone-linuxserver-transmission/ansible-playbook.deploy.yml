---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../docker/stack-standalone/anyone-linuxserver-transmission/ansible-playbook.deploy.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'nfs-client:&docker-transmission-node' if (groups['docker-transmission-node'] is defined) else 'nfs-client' }}"
  # run_once: true
  tasks:

    - name: wait nfs mount
      when: transmission.nfs_wait is defined
      include_tasks: "{{ playbook_dir }}/../../../.seed/ansible-tasks/nfs-mount.wait.yml"
      vars:
        _default:
          - name: on_manager
            point: "/transmission-config"
            mount: "/mnt/nfs/transmission-config"
            option: "vers=4,loud,rw,sync"
            unmount: true
            retry: 5
          - name: on_manager
            point: "/transmission-watch"
            mount: "/mnt/nfs/transmission-watch"
            option: "vers=4,loud,rw,sync"
            unmount: true
            retry: 5
          - name: on_manager
            point: "/transmission-downloads"
            mount: "/mnt/nfs/transmission-downloads"
            option: "vers=4,loud,rw,sync"
            unmount: true
            retry: 5
          - name: on_manager
            point: "/transmission-completed"
            mount: "/mnt/nfs/transmission-completed"
            option: "vers=4,loud,rw,sync"
            unmount: true
            retry: 5
        wait_nfs: "{{ transmission.nfs_wait | default(_default) }}"


- name: deploy
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-transmission-node' if (groups['docker-transmission-node'] is defined) else 'docker' }}"
  tasks:

    - name: set ws
      include_tasks:
        file: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"
        # https://github.com/ansible/ansible/issues/72099
        apply:
          run_once: true

    - name: set dir
      include_tasks:
        file: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"
        apply:
          run_once: true

    - name: copy to dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.copy.yml"
      vars:
        copys: "{{ transmission.dir_copy | default([],true) }}"

    - name: add external_vol
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-volumes.add.yml"
      vars:
        _default:
          external_vol-transmission-config:
            driver: local
          external_vol-transmission-watch:
            driver: local
          external_vol-transmission-downloads:
            driver: local
          external_vol-transmission-complete:
            driver: local
        volumes: "{{ transmission.vol | default(_default,true) }}"

    - name: add external_net
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-networks.add.yml"
      vars:
        _default:
          external_net-transmission:
            driver: overlay
            attachable: true
        networks: "{{ transmission.net | default(_default,true) }}"


- name: deploy
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: docker-manager
  run_once: true
  tasks:

    - name: set ws
      when: ws is undefined
      include_tasks: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"

    - name: set dir
      when: dir is undefined
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"

    - name: copy to dir
      when: not (dir.synchronized | default(false) | bool)
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.copy.yml"
      vars:
        copys: "{{ transmission.dir_copy | default([],true) }}"

    - name: add swarm label
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-label.add.yml"
      vars:
        labels: "{{ transmission.lab | default([],true) }}"

    # - name: add swarm secret
    #   include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-secrets.add.yml"
    #   vars:
    #     secrets: "{{ transmission.sec | default([],true) }}"

    # - name: add swarm config
    #   include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-configs.add.yml"
    #   vars:
    #     configs: "{{ transmission.cfg | default([],true) }}"

    - name: build env_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-env.create.yml"
      vars:
        env:
          dest: "{{ dir.remote }}/external_env-all.env"
          data: "{{ transmission.env | default([],true) }}"

    - name: add stack service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: stack
          name: "{{ dir.names[0] }}"
          path: "{{ dir.remote }}"
          # files: 
          #   - "docker-compose-swarm.yml"
          template:
            name: docker-compose-swarm
            opt:
              src: "{{ dir.local }}/docker-compose-swarm.yml.j2"
              dest: "{{ dir.remote }}/docker-compose-swarm.yml"
            vars:
              PROPAGATION_DOWNLOAD: "{{ transmission.tmp.bind_download_share_propagation | default(false) }}"
              BIND_DOWNLOAD: "{{ transmission.tmp.bind_download_volume | default('downloads') }}"
