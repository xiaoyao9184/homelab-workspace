---

- name: plugin.install|set _plugin
  vars:
    wait_default:
      domoticz:
        retries: 1
        delay: 0
        until:
          - container_loop_info.exists
          - container_loop_info.container.State.Running
    wait_update: "{{ plugin.wait | default({}) }}"
  ansible.builtin.set_fact:
    _plugin:
      ws: "{{ plugin.ws }}"
      dir: "{{ plugin.dir }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      vol_copy: "{{ plugin.vol_copy }}"
      result: "{{ plugin.result | default('create_result') }}"

- name: plugin.install|wait container
  include_tasks: "{{ _plugin.ws.local }}/.seed/ansible-tasks/docker-container.wait.yml"
  vars:
    containers: "{{ _plugin.wait }}"

- name: plugin.install|print _plugin
  debug:
    var: _plugin

- name: plugin.install|copy to volume
  include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-volumes.copy.yml"
  vars:
    default: []
    volumes: "{{ _plugin.vol_copy | default(default,true) }}"

- name: plugin.install|exec
  community.docker.docker_container_exec:
    container: "domoticz"
    command: "ls -l /opt/domoticz/userdata/plugins/"
  register: exec_result

- name: plugin.install|set _plugin.result
  when:
    - exec_result is defined
    - exec_result.stdout is defined
  ansible.builtin.set_fact:
    "{{ _plugin.result }}": "{{ exec_result.stdout_lines[-1] | default(exec_result.stderr) }}"

- name: plugin.install|print _plugin.result
  debug:
    var: "{{ _plugin.result }}"

- name: plugin.install|reset _plugin
  ansible.builtin.set_fact:
    _plugin: !!null
