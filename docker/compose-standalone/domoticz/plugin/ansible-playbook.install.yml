---


- name: install
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../docker/compose-standalone/domoticz/plugin/ansible-playbook.install.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-domoticz-node' if (groups['docker-domoticz-node'] is defined) else 'docker' }}"
  run_once: true
  tasks:

    - name: set ws
      include_tasks: "{{ playbook_dir }}/../../../../.seed/ansible-tasks/ws.set.yml"

    - name: set dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"
      vars:
        length: 2
        keep: false

    - name: git clone
      loop: "{{ domoticz.plugin.git_clone | default([],true) }}"
      delegate_to: localhost
      ansible.builtin.git: "{{ item }}"

    - name: copy to dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.copy.yml"
      vars:
        copys: "{{ domoticz.plugin.dir_copy | default([],true) }}"

    - name: install plugin
      include_tasks: "{{ dir.local }}/plugin/ansible-tasks.install.yml"
      vars:
        plugin:
          service:
            type: compose
            name: "domoticz"
            project: "{{ dir.names[0] }}"
          ws: "{{ ws }}"
          result: plugin_install
          vol_cp: "{{ domoticz.plugin.vol_cp | default([],true) }}"

    - name: restart service
      when: domoticz.plugin.restart | default(false) | bool
      community.docker.docker_compose:
        state: present
        restarted: true
        project_name: "{{ dir.names[0] }}"
        project_src: "{{ dir.remote }}"
        files:
          - "docker-compose.networks.yml"
          - "docker-compose.yml"
