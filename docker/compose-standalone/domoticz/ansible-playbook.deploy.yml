---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../docker/compose-standalone/domoticz/ansible-playbook.deploy.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-domoticz-node' if (groups['docker-domoticz-node'] is defined) else 'docker' }}"
  run_once: true
  tasks:

    - name: set ws
      include_tasks: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"

    - name: set dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"

    - name: copy to dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dirs.copy.yml"
      vars:
        dirs:
          sync:
            - dest: "{{ dir.remote }}"
          cp: "{{ domoticz.dir_copy | default([],true) }}"

    - name: add external_vol
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-volumes.add.yml"
      vars:
        default:
          external_vol-domoticz-userdata:
            driver: local
        volumes: "{{ domoticz.vol | default(default,true) }}"

    - name: add external_net
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-networks.add.yml"
      vars:
        networks: "{{ domoticz.net | default([],true) }}"

    - name: build env_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-envs.create.yml"
      vars:
        envs:
          - dest: "{{ dir.remote }}/external_env-all.env"
            data: "{{ domoticz.env | default([],true) }}"

    - name: build compose_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-composes.create.yml"
      vars:
        composes:
          - version: "3.8"
            dest: "{{ dir.remote }}/docker-compose.networks.yml"
            data: "{{ domoticz.compose | default({},true) }}"

    - name: add compose service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: compose
          name: "{{ dir.names[0] }}"
          path: "{{ dir.remote }}"
          files:
            - "docker-compose.networks.yml"
          #   - "docker-compose.yml"
          template:
            name: "docker-compose"
            opt:
              src: "{{ dir.local }}/docker-compose.yml.j2"
              dest: "{{ dir.remote }}/docker-compose.yml"
            vars:
              NETWORKS: "{{ domoticz.tmp.networks | default([],true) }}"
              PORTS: "{{ domoticz.tmp.ports | default([],true) }}"
              DEVICES: "{{ domoticz.tmp.devices | default([],true) }}"

    - when: domoticz.exec is defined
      block:

        - name: wait container
          include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-container.wait.yml"
          vars:
            containers:
              domoticz:
                retries: -1
                delay: 30
                until:
                  - container_loop_info.exists
                  - container_loop_info.container.State.Running

    - name: exec service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          type: compose
          name: domoticz
          project: "{{ dir.names[0] }}"
          command: "{{ command }}"
          result: exe_result
      loop: "{{ domoticz.exec | default([],true) }}"
      loop_control:
        loop_var: command

    - name: restart service
      when: domoticz.restart | default(false) | bool
      community.docker.docker_compose:
        state: present
        restarted: true
        project_name: "{{ _compose.name }}"
        project_src: "{{ _compose.path }}"
        files: "{{ _compose.files }}"
