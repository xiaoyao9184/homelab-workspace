---


- name: preauthkey.create|set _preauthkey
  vars:
    wait_default:
      headscale:
        retries: 1
        delay: 0
        until:
          - container_loop_info.exists
          - container_loop_info.container.State.Running
    wait_update: "{{ preauthkey.service.wait | default({}) }}"
  ansible.builtin.set_fact:
    _preauthkey:
      ws: "{{ preauthkey.ws }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      expire_user: "{{ preauthkey.expire_user | default([{'expire':'240h','user':'default'}]) }}" 
      result: "{{ preauthkey.result | default('create_result') }}"

- name: preauthkey.create|wait container
  include_tasks: "{{ _preauthkey.ws.local }}/.seed/ansible-tasks/docker-container.wait.yml"
  vars:
    containers: "{{ _preauthkey.wait }}"

- name: preauthkey.create|print _preauthkey
  debug:
    var: _preauthkey

- name: preauthkey.create|create preauthkey
  loop: "{{ _preauthkey.expire_user }}"
  when:
    - wait_result.exists
    - item.expire | default(None,true) != None
  community.docker.docker_container_exec:
    container: "{{ wait_result.container_id }}"
    command: "headscale preauthkey create -e {{ item.expire }} -u {{ item.user }} --reusable"
  register: exec_result

- name: preauthkey.create|set _preauthkey.result
  when:
    - exec_result is defined
    - exec_result.results is defined
  ansible.builtin.set_fact:
    "{{ _preauthkey.result }}": "{{ exec_result | json_query('results[].{expire: item.expire,user: item.user,result: stdout_lines[-1]}') }}"

- name: preauthkey.create|print _preauthkey.result
  debug:
    var: "{{ _preauthkey.result }}"

- name: preauthkey.create|reset _preauthkey
  ansible.builtin.set_fact:
    _preauthkey: !!null
