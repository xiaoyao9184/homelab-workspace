---


- name: node.delete|set _node
  vars:
    wait_default:
      headscale:
        retries: 1
        delay: 0
        until:
          - container_loop_info.exists
          - container_loop_info.container.State.Running
    wait_update: "{{ node.wait | default({}) }}"
  ansible.builtin.set_fact:
    _node:
      ws: "{{ node.ws }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      id: "{{ node.id | default([]) }}"
      user: "{{ node.user | default([]) }}"
      result: "{{ node.result | default('expire_result') }}"

- name: node.delete|wait container
  include_tasks: "{{ _node.ws.local }}/.seed/ansible-tasks/docker-container.wait.yml"
  vars:
    containers: "{{ _node.wait }}"

- when: 
    - _node.id | length == 0
    - _node.user | length == 0
  block:

    - name: node.delete|list user
      community.docker.docker_container_exec:
        container: "{{ wait_result.container_id }}"
        command: "headscale user list -o json"
      register: list_result

    - name: node.delete|set _node.user
      vars:
        user: "{{ list_result.stdout | from_json | json_query('[].name') | default([],true) }}"
        update:
          user: "{{ user }}"
      ansible.builtin.set_fact:
        _node: "{{ _node | combine(update, recursive=True) }}"

- when: _node.user | length > 0
  block:

    - name: _node.delete|list node
      loop: "{{ _node.user }}"
      community.docker.docker_container_exec:
        container: "{{ wait_result.container_id }}"
        command: "headscale node list -u {{ item }} -o json"
      register: list_result

    - name: _node.delete|add _node.id
      loop: "{{ list_result.results }}"
      when: item.stdout != 'null'
      vars:
        key: "{{ item.stdout | from_json | json_query('[].id') | default([],true) }}"
        update:
          id: "{{ _node.id + id }}"
      ansible.builtin.set_fact:
        _node: "{{ _node | combine(update, recursive=True) }}"

- name: node.delete|print _node
  debug:
    var: _node

- name: node.delete|delete node
  loop: "{{ _node.id }}"
  when:
    - wait_result.exists
  community.docker.docker_container_exec:
    container: "{{ wait_result.container_id }}"
    command: "headscale node delete --identifier {{ item }} --force"
  register: exec_result

- name: node.delete|set _node.result
  when:
    - exec_result is defined
    - exec_result.results is defined
  ansible.builtin.set_fact:
    "{{ _node.result }}": "{{ exec_result | json_query('results[].{key: item,value: stdout_lines[-1]}') | items2dict }}"

- name: node.delete|print _node.result
  debug:
    var: "{{ _node.result }}"

- name: node.delete|reset _node
  ansible.builtin.set_fact:
    _node: !!null
