---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible \
        $PWD/../../../docker/compose-standalone/qinglong/ansible-playbook.deploy.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('',true) }}"
  hosts: "{{ 'docker:&docker-qinglong-node' if (groups['docker-qinglong-node'] is defined) else 'docker' }}"
  run_once: true
  tasks: 

    - name: set ws
      include_tasks: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"

    - name: set dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"

    - name: copy dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.copy.yml"
      vars:
        copys: "{{ qinglong.dir_copy | default([],true) }}"

    - name: add external_vol
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-volumes.add.yml"
      vars:
        _default:
          external_vol-qinglong-data:
            driver: local
        volumes: "{{ qinglong.vol | default(_default,true) }}"
              
    - name: build env_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-env.create.yml"
      vars:
        env: 
          dest: "{{ dir.remote }}/external_env-all.env"
          data: "{{ qinglong.env | default([],true) }}"

    - name: add compose service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: compose
          name: "{{ dir.names[0] }}"
          path: "{{ dir.remote }}"
          files: 
            - "docker-compose.yml"

    - name: exec service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          type: compose
          name: qinglong
          project: "{{ dir.names[0] }}"
          command: "{{ command }}"
          result: exe_result
      loop: "{{ qinglong.exec | default([],true) }}"
      loop_control:
        loop_var: command

    - name: restart container
      when: domoticz.exec is defined
      community.docker.docker_container:
        name: qinglong
        state: started
        restart: true
