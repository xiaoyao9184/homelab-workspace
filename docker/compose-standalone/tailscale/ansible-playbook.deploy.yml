---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --ask-become-pass \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../docker/compose-standalone/tailscale/ansible-playbook.deploy.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-tailscale-node' if (groups['docker-tailscale-node'] is defined) else 'docker' }}"
  run_once: true
  tasks: 

    - name: mkdir tailscaled sock
      become: true
      ansible.builtin.file:
        path: "/var/run/tailscale"
        state: directory

    - name: set ws
      include_tasks: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"

    - name: set dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"

    - name: copy to dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dirs.push.yml"
      vars:
        dirs:
          sync:
            - src: "{{ dir.local }}/docker-compose.yml"
              dest: "{{ dir.remote }}/docker-compose.yml"
          cp: "{{ tailscale.dir_push | default([],true) }}"

    - name: build env_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-envs.create.yml"
      vars:
        envs:
          - dest: "{{ dir.remote }}/external_env-all.env"
            data: "{{ tailscale.env | default([],true) }}"

    - name: add compose service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: compose
          name: "{{ dir.names[0] }}"
          path: "{{ dir.remote }}"
          files:
            - "docker-compose.yml"

    - when: tailscale.up.authkey is defined
      block:

        - name: wait container
          include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-container.wait.yml"
          vars:
            containers:
              tailscale:
                retries: -1
                delay: 30
                until:
                  - container_loop_info.exists
                  - container_loop_info.container.State.Running

        - name: exec container
          include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-container.exec.yml"
          vars:
            container:
              name: tailscale
              project: "{{ dir.names[0] }}"
              command: "tailscale up --authkey={{ tailscale.up.authkey }} --advertise-exit-node"
              result: exe_result
