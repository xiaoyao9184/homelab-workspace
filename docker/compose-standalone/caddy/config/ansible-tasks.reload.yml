---

- name: config.reload|set _config
  vars:
    wait_default:
      caddy:
        retries: 1
        delay: 0
        until:
          - container_loop_info.exists
          - container_loop_info.container.State.Running
    wait_update: "{{ config.wait | default({}) }}"
    exec_default:
      name: caddy
      command: "caddy reload --config /etc/caddy/Caddyfile"
      result: exec_result
    exec_update: "{{ config.exec | default({}) }}"
  ansible.builtin.set_fact:
    _config:
      ws: "{{ config.ws }}"
      dir: "{{ config.dir }}"
      wait: "{{ wait_default | combine(wait_update, recursive=True) }}"
      exec: "{{ exec_default | combine(exec_update, recursive=True) }}"
      result: "{{ config.result | default('create_result') }}"

- name: config.reload|wait container
  include_tasks: "{{ _config.ws.local }}/.seed/ansible-tasks/docker-container.wait.yml"
  vars:
    containers: "{{ _config.wait }}"

- name: config.reload|print _config
  debug:
    var: _config

- name: config.reload|exec container
  include_tasks: "{{ _config.ws.local }}/.seed/ansible-tasks/docker-container.exec.yml"
  vars:
    container: "{{ _config.exec }}"

- name: config.reload|set _config.result
  when:
    - exec_result is defined
    - exec_result.stdout is defined
  ansible.builtin.set_fact:
    "{{ _config.result }}": "{{ exec_result.stdout_lines[-1] | default(exec_result.stderr) }}"

- name: config.reload|print _config.result
  debug:
    var: "{{ _config.result }}"

- name: config.reload|reset _config
  ansible.builtin.set_fact:
    _config: !!null
