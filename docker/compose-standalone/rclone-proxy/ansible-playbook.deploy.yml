---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible \
        $PWD/../../../docker/compose-standalone/rclone-proxy/ansible-playbook.deploy.yml
  vars_prompt:
    - name: service_names
      prompt: "What is service name(same as config file name in inventory_dir/rclone)?"
      private: no
      default: 
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-rclone-node' if (groups['docker-rclone-node'] is defined) else 'docker' }}"
  run_once: true
  tasks: 

    - name: check shared
      loop: "{{ rclone_proxy.shared_check | default([]) }}"
      ansible.builtin.shell: "cat /proc/1/mountinfo | grep '{{ item }} ' | grep 'shared' "
      register: check_result

    - name: fail not shared
      when:
        - rclone_proxy.shared_check | default([]) | length >0
        - check_result.rc is defined 
        - check_result.rc == 0
      ansible.builtin.fail:
        msg: "shared check fail"

    - name: set ws
      include_tasks: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"

    - name: set dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"

    - name: default service_names
      when: service_names == ''
      block:

        - name: list config_files
          include_tasks: "{{ ws.local }}/.seed/ansible-tasks/file-name.list.yml"
          vars:
            name: 
              option_find: "{{ inventory_dir }}/../rclone"
              result_var: config_files
              location: local

        - name: set service_names
          ansible.builtin.set_fact:
            service_names: "{{ config_files | map('basename') | map('splitext') | map('first') | join(',') }}"

    - name: set service_name_list
      ansible.builtin.set_fact:
        service_name_list: "{{ service_names.split(',') }}"
        dir_copy_list: "{{ [] + (rclone_proxy.dir_copy | default([])) }}" 
        vol_list: []
        env_list: []
        template_list: []
        mkdir_list: 
          - "{{ dir.remote }}/docker-compose"

    - name: add service_name_list
      ansible.builtin.set_fact:
        dir_copy_list: "{{ dir_copy_list + [dir_copy] }}"
        vol_list: "{{ vol_list + [vol] }}"
        env_list: "{{ env_list + [env] }}"
        template_list: "{{ template_list + [template] }}"
        mkdir_list: "{{ mkdir_list + [service.bind_map.data] }}"
      vars:
        service: "{{ rclone_proxy.service[name] }}"
        dir_copy: "{{ service.dir_copy | default([]) }}"
        vol: 
          - name: "external_vol-rclone-config-{{ name }}"
            driver: local
            driver_opts:
              type: none
              device: "{{ service.vol_map.config }}"
              o: bind
        env_default: "{{ rclone_proxy.env | default([]) }}"
        env:
          - dest: "{{ dir.remote }}/docker-compose/external_env-{{ name }}.env"
            data: "{{ service.env | default(env_default) }}"
        template:
          name: "{{ name }}"
          opt:
            src: "{{ dir.local }}/docker-compose.yml.j2"
            dest: "{{ dir.remote }}/docker-compose/{{ name }}.yml"
          vars:
            SERIVCE_NAME: "{{ name }}"
            BIND_DATA: "{{ service.bind_map.data }}"
      loop: "{{ service_name_list }}"
      loop_control:
        loop_var: name

    - name: copy dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.copy.yml"
      vars:
        copys: "{{ dir_copy_list | flatten }}"

    - name: add external_vol
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-volumes.add.yml"
      vars:
        volumes: "{{ vol_list | flatten }}"

    - name: mkdir for serivce
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop: "{{ mkdir_list }}"
      ignore_errors: true

    - name: build env_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-envs.create.yml"
      vars:
        envs: "{{ env_list | flatten }}"

    - name: add compose service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: compose
          name: "{{ dir.names[0] }}"
          path: "{{ dir.remote }}/docker-compose"
          # files: 
          #   - "docker-compose.yml"
          template: "{{ template_list }}"
