---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../docker/stack-scale/global-gitlab-runner/ansible-playbook.deploy.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-gitlab-runner' if (groups['docker-gitlab-runner'] is defined) else 'docker' }}"
  tasks:

    - name: set ws
      include_tasks:
        file: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"
        # https://github.com/ansible/ansible/issues/72099
        apply:
          run_once: true

    - name: set dir
      include_tasks:
        file: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"
        apply:
          run_once: true

    - name: copy to dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dirs.copy.yml"
      vars:
        dirs:
          sync:
            - src: "{{ dir.remote }}/docker-compose-swarm.yml"
              dest: "{{ dir.remote }}/docker-compose-swarm.yml"
              delegate_to: "{{ groups['docker-manager'] | first }}"
              run_once: true

    # - name: add external_vol
    #   include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-volumes.add.yml"
    #   vars:
    #     default: []
    #     volumes: "{{ gitlab.runner.vol | default(default,true) }}"

    - name: add external_net
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-networks.add.yml"
      vars:
        default:
          external_net-gitlab:
            driver: overlay
            attachable: true
        networks: "{{ gitlab.runner.net | default(default,true) }}"

    # - name: add external_cfg
    #   include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-configs.add.yml"
    #   vars:
    #     configs: "{{ gitlab.runner.cfg | default([],true) }}"

    # - name: add external_sec
    #   include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-secrets.add.yml"
    #   vars:
    #     secrets: "{{ gitlab.runner.sec | default([],true) }}"


- name: deploy
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: docker-manager
  run_once: true
  tasks: 

    - name: set ws
      include_tasks: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"

    - name: set dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"

    - name: add swarm label
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-label.add.yml"
      vars:
        labels: "{{ gitlab.runner.lab | default([],true) }}"

    - name: build env_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-env.create.yml"
      vars:
        env: 
          dest: "{{ dir.remote }}/external_env-all.env"
          data: "{{ gitlab.runner.env | default([],true) }}"

    - name: add stack service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: stack
          name: "{{ dir.names[0] }}"
          path: "{{ dir.remote }}"
          files: 
            - "docker-compose-swarm.yml"


- name: deploy
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-gitlab-node' if (groups['docker-gitlab-node'] is defined) else 'docker' }}"
  tasks: 

    - name: wait host port
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/host-port.wait.yml"
      vars:
        wait_name: "{{ dir.names | join('_') }}"
        wait_network:
          - external_net-gitlab
        wait_port: 
          gitlab-ce: 80

    - name: lookup service
      include_tasks: "{{ _apikey.ws.local }}/.seed/ansible-tasks/docker-service.lookup.yml"
      vars:
        service: 
          name: "{{ gitlab.runner.exec_target.service | default('gitlab-ce',true) }}"
          namespace: "{{ gitlab.runner.exec_target.stack | default('anyone-gitlab-runner',true) }}"
          retries: 1
          delay: 0
          result: "lookup_result"

    - name: exec get runner token
      when:
        - lookup_result.exists
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          name: "{{ gitlab.runner.exec_target.service | default('gitlab-ce',true) }}"
          namespace: "{{ gitlab.runner.exec_target.stack | default('anyone-gitlab-runner',true) }}"
          # https://stackoverflow.com/questions/59701804/obtain-shared-runners-token-gitlab-api
          command: |
            gitlab-rails runner -e production "puts Gitlab::CurrentSettings.current_application_settings.runners_registration_token"
          result: "runner_token"


- name: deploy
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-gitlab-runner' if (groups['docker-gitlab-runner'] is defined) else 'docker' }}"
  tasks: 

    # TODO In swarm multi-node mode, cant know which node it is running on
    - name: exec register runner
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          name: "gitlab-runner"
          namespace: "{{ dir.names | join('_') }}"
          command: |
            gitlab-runner register \
              --non-interactive \
              --url 'http://gitlab-ce/' \
              --registration-token '{{ runner_token.stdout }}' \
              --executor 'docker' \
              --docker-image alpine:latest \
              --description 'docker-runner' \
              --maintenance-note 'Free-form maintainer notes about this runner' \
              --tag-list 'docker,aws' \
              --run-untagged='true' \
              --locked='false' \
              --access-level='not_protected'
          result: "runner_register"
