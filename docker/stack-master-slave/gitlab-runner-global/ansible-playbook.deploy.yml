---

- name: deploy
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible \
        $PWD/../../../docker/stack-master-slave/gitlab-runner-global/ansible-playbook.deploy.yml
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('',true) }}"
  hosts: docker-manager
  run_once: true
  tasks: 

    - name: set ws
      include_tasks: "{{ playbook_dir }}/../../../.seed/ansible-tasks/ws.set.yml"

    - name: set dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.set.yml"

    - name: copy dir
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/dir.copy.yml"

    - name: add external_net
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-networks.add.yml"
      vars:
        networks:
          external_net-gitlab:
            driver: overlay
            attachable: true

    - name: build env_file
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-env.create.yml"
      vars:
        env: 
          dest: "{{ dir.remote }}/external_env-all.env"
          data: "{{ gitlab.runner.env }}"

    - name: add stack service
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-compose.add.yml"
      vars:
        compose:
          type: stack
          name: "{{ dir.names[0] }}"
          path: "{{ dir.remote }}"
          files: 
            - "docker-compose-swarm.yml"

- name: deploy
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('',true) }}"
  hosts: "{{ 'docker:&docker-gitlab-node' if (groups['docker-gitlab-node'] is defined) else 'docker' }}"
  tasks: 

    # TODO gitlab node maybe multiple but service maybe just one
    - name: wait host port
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/host-port.wait.yml"
      vars:
        wait_name: "{{ dir.names | join('_') }}"
        wait_network:
          - external_net-gitlab
        wait_port: 
          gitlab-ce: 80

    - name: exec get runner token
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          name: "gitlab-ce"
          namespace: "gitlab"
          # https://stackoverflow.com/questions/59701804/obtain-shared-runners-token-gitlab-api
          command: |
            gitlab-rails runner -e production "puts Gitlab::CurrentSettings.current_application_settings.runners_registration_token"
          result: "runner_token"

- name: deploy
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('',true) }}"
  hosts: "{{ 'docker:&docker-gitlab-runner-node' if (groups['docker-gitlab-runner-node'] is defined) else 'docker' }}"
  tasks: 

    - name: exec register runner
      include_tasks: "{{ ws.local }}/.seed/ansible-tasks/docker-service.exec.yml"
      vars:
        service:
          name: "gitlab-runner"
          namespace: "{{ dir.names | join('_') }}"
          command: |
            gitlab-runner register \
              --non-interactive \
              --url 'http://gitlab-ce/' \
              --registration-token '{{ runner_token.stdout }}' \
              --executor 'docker' \
              --docker-image alpine:latest \
              --description 'docker-runner' \
              --maintenance-note 'Free-form maintainer notes about this runner' \
              --tag-list 'docker,aws' \
              --run-untagged='true' \
              --locked='false' \
              --access-level='not_protected'
          result: "runner_register"
