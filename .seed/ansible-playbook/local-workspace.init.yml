---


- name: init
  vars:
    run_wsl: |
      ansible-playbook \
        --ask-become-pass \
        --inventory $PWD/ansible \
        $PWD/../../../.seed/ansible-playbook/local-workspace.init.yml
    default:
      package:
        - sshpass
        - rsync
        - git
      pip:
        - jsondiff
        - jmespath

        - pyyaml
        - lxml
        - requests
      role: []
      collection:
        - community.docker
        - community.general
  hosts: localhost
  connection: local
  # environment:
  #   SSL_CERT_DIR: /etc/ssl/certs
  tasks: 

    - name: install system package 
      become: true
      ansible.builtin.package:
        name: "{{ default.package + (local.init.package | default([]) | flatten) }}"
        state: present
      register: package_result
      until: "package_result is not failed"
      retries: 3
      delay: 5

    - name: install pip package
      loop: "{{ default.pip + (local.init.pip | default([]) | flatten) }}"
      ansible.builtin.pip:
        name: "{{ item }}"
        state: latest
      register: pip_result
      until: "pip_result is not failed"
      retries: 3
      delay: 5

    - name: stat of ansible requirements
      ansible.builtin.stat:
        path: "{{ inventory_dir }}/../requirements.yml"
      register: _stat_requirements

    - name: install ansible requirements
      when: _stat_requirements.stat.exists
      ansible.builtin.shell: "ansible-galaxy install -r {{ inventory_dir }}/../requirements.yml"
      register: galaxy_result
      until: "galaxy_result is not failed"
      retries: 3
      delay: 5
    
    - when: not _stat_requirements.stat.exists
      block:

        - name: install ansible role
          loop: "{{ default.role + (local.init.role | default([]) | flatten) }}"
          community.general.ansible_galaxy_install:
            type: role
            name: "{{ item }}"
          register: role_result
          until: "role_result is not failed"
          retries: 3
          delay: 5

        - name: install ansible collection
          loop: "{{ default.collection + (local.init.collection | default([]) | flatten) }}"
          community.general.ansible_galaxy_install:
            type: collection
            name: "{{ item }}"
          register: collection_result
          until: "collection_result is not failed"
          retries: 3
          delay: 5
