---


- name: init system at local
  vars:
    run_wsl: |
      ansible-playbook \
        --ask-become-pass \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../.seed/ansible-playbook/remote-system.init.yml
  hosts: localhost
  connection: local
  become: false
  run_once: true
  pre_tasks:

    - name: set fact for init system
      ansible.builtin.set_fact:
        seed_system:
          group: "{{ remote.system.group | default('') }}"

    - name: update seed_system for automatic init docker system
      when:
        - remote.system.group is undefined
        - groups.docker is defined
      ansible.builtin.set_fact:
        seed_system:
          group: "docker"

    - name: input customize group for init system
      when:
        - seed_system.group | default(None,true) == None
      ansible.builtin.pause:
        prompt: "What is ansible host group for init system(empty 'NONE' skip init)?"
      register: prompt

    - name: update seed_system for init system
      when: 
        - seed_system.group | default(None,true) == None
      vars:
        update:
          group: "{{ prompt.user_input | default('NONE',true) }}"
      ansible.builtin.set_fact:
        seed_system: "{{ seed_system | combine(update, recursive=True) }}"

  tasks:

    - debug:
        msg:
          - "system local initialized"
          - "group: {{ seed_system.group }}"


- name: "init system at {{ hostvars['localhost'].seed_system.group }}"
  hosts: "{{ hostvars['localhost'].seed_system.group }}"
  # become: true
  # disable gather_facts for miss python on target
  gather_facts: false
  # env not work with disable gather_facts
  # environment:
  #   PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  pre_tasks:

    - name: set seed_system from localhost
      vars:
        remote: "{{ hostvars['localhost'].remote }}"
        task_default: "{{ playbook_dir }}/../ansible-tasks/seed-docker.init.yml"
      ansible.builtin.set_fact:
        seed_system:
          group: "{{ hostvars['localhost'].seed_system.group }}"
          taskpath: "{{ remote.system.task | default(task_default) }}"

  tasks:

    - include_tasks: "{{ seed_system.taskpath }}"
      vars:
        system:
          package: "{{ remote.system.package | default('') }}"
          pip: "{{ remote.system.pip | default('') }}"

    - debug:
        msg:
          - "system remote initialized"
          - "host: {{ ansible_host }}"
          - "task: {{ seed_system.taskpath }}"
