---


- name: docker-env.create|set _env
  ansible.builtin.set_fact:
    _env: []
    _env_list: []
    _env_dict: {}
    # BUG? When different variable in loop include_tasks, run_once set_fact will set all host fact
    _envs_manager: []

- when:
    - env.data is defined
    - env.data | type_debug == "list"
  block:

    - name: docker-env.create|list env
      ansible.builtin.set_fact:
        _env_list: "{{ env.data }}"

    - name: docker-env.create|append list
      ansible.builtin.set_fact:
        _env: "{{ _env + _env_list }}"

- when:
    - env.data is defined
    - env.data | type_debug == "dict"
  block:

    - name: docker-env.create|dict env
      ansible.builtin.set_fact:
        _env_dict: "{{ env.data }}"

    - name: docker-env.create|append dict
      loop: "{{ _env_dict | dict2items }}"
      loop_control:
        loop_var: env_kv
      vars:
        env_item: "{{ env_kv.key }}={{ env_kv.value }}"
      ansible.builtin.set_fact:
        _env: "{{ _env + [ env_item ] }}"

- name: docker-env.create|set _env_mode
  ansible.builtin.set_fact:
    _env_mode: "{{ env.mode | default('compose',true) }}"

- when: _env_mode == "stack"
  block:

    # Merge multiple docker nodes '_env' variables when is swarm env
    - name: docker-env.create|append swarm _envs_manager from each docker host
      run_once: true
      loop: "{{ groups['docker'] }}"
      loop_control:
        loop_var: hostitem
      vars:
        list: "{{ _envs_manager | default([],true) }}"
        append: "{{ hostvars[hostitem]._env if (hostvars[hostitem]._env | default(None,true) != None) else [] }}"
      ansible.builtin.set_fact:
        _envs_manager: "{{ (list + append) | unique }}"

    - name: docker-env.create|print env
      run_once: true
      ansible.builtin.debug:
        var: _envs_manager

    - name: docker-env.create|write to env.dest
      run_once: true
      delegate_to: "{{ groups['docker-manager'] | first }}"
      ansible.builtin.copy:
        content: "{{ _envs_manager | join('\n') }}"
        dest: "{{ env.dest }}"
        mode: '0777'

- when: _env_mode == "compose"
  block:

    - name: docker-env.create|print _env
      ansible.builtin.debug:
        var: _env

    - name: docker-env.create|write env file
      ansible.builtin.copy:
        content: "{{ _env | join('\n') }}"
        dest: "{{ env.dest }}"
        mode: '0777'

- name: docker-env.create|reset _env
  ansible.builtin.set_fact:
    _env: !!null
    _env_list: !!null
    _env_dict: !!null
    _env_mode: !!null
