---


- name: docker-volume.copy|not loop
  when: volume.key is undefined
  block:

    - name: docker-volume.copy|set _vol _cp from volume
      vars:
        vol_keys: ['name']
        vol_values: "{{ vol_keys | map('extract', volume) | list }}"
        cp_keys: "{{ volume.keys() | difference(vol_keys) }}"
        cp_values: "{{ cp_keys | map('extract', volume) | list }}"
      ansible.builtin.set_fact:
        _vol: "{{ dict(vol_keys | zip(vol_values)) }}"
        _cp: "{{ dict(cp_keys | zip(cp_values)) }}"

- name: docker-volume.copy|in loop
  when: volume.key is defined
  block:

    - name: docker-volume.copy|set _vol _cp from volume.key volume.value 
      ansible.builtin.set_fact:
        _vol: 
          name: "{{ volume.key }}"
        _cp: "{{ volume.value | default({},true) }}"

- name: docker-volume.copy|print volume
  ansible.builtin.debug:
    var: _vol

- name: docker-volume.copy|print copy
  ansible.builtin.debug:
    var: _cp

- name: docker-volume.copy|get volume info
  community.docker.docker_volume_info:
    name: "{{ _vol.name }}"
  register: _vol_info

- name: docker-volume.copy|print volume info
  ansible.builtin.debug:
    var: _vol_info

- name: docker-volume.copy|copy to volume by bind
  when: 
    - _vol_info.exists
    - _vol_info.volume.Driver | default('NONE') == 'local'
    - _vol_info.volume.Options.type | default('NONE') == 'none'
    - _vol_info.volume.Options.o | default('NONE') == 'bind'
  block:

    - name: docker-volume.copy|set system copy by volume mount point
      vars:
        _copy_update:
          dest: "{{ _vol_info.volume.Options.device }}/{{ _cp.dest }}"
      ansible.builtin.set_fact:
        _copy_system: "{{ _cp | combine(_copy_update, recursive=True) }}"

    - name: docker-volume.copy|print system copy
      ansible.builtin.debug:
        var: _copy_system

    - name: docker-volume.copy|copy system
      ansible.builtin.copy: "{{ _copy_system }}"

    - name: docker-volume.copy|reset _copy
      ansible.builtin.set_fact:
        _copy_system: !!null
        _copy_done: true

- name: docker-volume.copy|copy to volume by container
  when: 
    - _vol_info.exists
    - not (_copy_done | default(false) | bool)
  block:

    - name: docker-volume.copy|set system copy by workspace remote
      vars:
        _copy_update:
          dest: "{{ workspace.remote }}/{{ _cp.dest }}"
      ansible.builtin.set_fact:
        _copy_system: "{{ _cp | combine(_copy_update, recursive=True) }}"

    - name: docker-volume.copy|print system copy
      ansible.builtin.debug:
        var: _copy_system

    - name: docker-volume.copy|copy system
      ansible.builtin.copy: "{{ _copy_system }}"

    - name: docker-volume.copy|set container copy by system copy
      vars:
        _copy_update:
          src: "{{ _copy_system.dest }}/."
          dest: "/seed_vol/{{ _cp.dest }}"
      ansible.builtin.set_fact:
        _copy_container: "{{ _cp | combine(_copy_update, recursive=True) }}"

    - name: docker-volume.copy|print container copy
      ansible.builtin.debug:
        var: _copy_container

    - name: docker-volume.copy|start volume container
      community.docker.docker_container:
        name: "{{ _vol.name }}"
        state: started
        image: alpine
        command: "tail -f /dev/null"
        volumes:
          - "{{ _vol.name }}:/seed_vol"
        labels:
          "com.docker.stack.namespace": seed
          "com.github.xiaoyao9184.docker-seed.type": "docker-volume.copy"
          "com.github.xiaoyao9184.docker-seed.creator": "{{ lookup('ansible.builtin.env', 'SEED_NAME') | default('docker-volume.copy',true) }}"
      register: result_vol_container
      until: "result_vol_container is not failed"
      retries: 1000
      delay: 10

    - name: docker-volume.copy|copy volume container
      ansible.builtin.shell: "docker cp {{ _copy_container.src }} {{ _vol.name }}:/{{ _copy_container.dest }}"
      
    - name: docker-volume.copy|stop volume container
      community.docker.docker_container:
        name: "{{ _vol.name }}"
        state: stopped

    - name: docker-volume.copy|reset _copy
      ansible.builtin.set_fact:
        _copy_system: !!null
        _copy_container: !!null
        _copy_done: true

- name: docker-volume.copy|reset _vol
  ansible.builtin.set_fact:
    _copy_done: !!null
    _vol_info: !!null
    _cp: !!null
    _vol: !!null
