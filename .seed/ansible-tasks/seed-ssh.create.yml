---


- name: seed-ssh.create|set _ssh
  ansible.builtin.set_fact:
    _ssh:
      basename: "{{ ssh.basename | default(lookup('community.general.random_string', upper=false, special=false),true) }}"
      username: "{{ ssh.username | default('root',true) }}"
      ansible_group: "{{ ssh.ansible_group | default('ssh',true) }}"
      keyscan_type: "{{ ssh.keyscan_type | default('ed25519',true) }}"

- name: seed-ssh.create|print _ssh
  ansible.builtin.debug:
    var: _ssh

- name: seed-ssh.create|create a directory for ssh
  ansible.builtin.file:
    path: "~/.ssh/{{ _ssh.basename }}/"
    state: directory

- name: seed-ssh.create|generate an OpenSSH keypair rsa 2048
  community.crypto.openssh_keypair:
    path: "~/.ssh/{{ _ssh.basename }}/id_rsa"
    size: 2048
    type: rsa
    comment: "{{ _ssh.basename }}"
  # https://github.com/microsoft/WSL/issues/670
  register: generate_result
  until: "generate_result is not failed"
  retries: 3
  delay: 1

- name: seed-ssh.create|add a host in the configuration
  loop: "{{ groups[_ssh.ansible_group] }}"
  loop_control:
    loop_var: name
  vars:
    host: "{{ hostvars[name].ansible_host | default(name,true) }}"
  community.general.ssh_config:
    ssh_config_file: "~/.ssh/config"
    host: "{{ host }}"
    hostname: "{{ host }}"
    remote_user: "{{ _ssh.username }}"
    identity_file: "~/.ssh/{{ _ssh.basename }}/id_rsa"
    # user_known_hosts_file: "~/.ssh/known_hosts"
    state: present

- name: seed-ssh.create|scan ssh fingerprint for host
  loop: "{{ groups[_ssh.ansible_group] }}"
  loop_control:
    loop_var: name
  vars:
    host: "{{ hostvars[name].ansible_host | default(name,true) }}"
    port: "{{ hostvars[name].ansible_port | default(22,true) }}"
  ansible.builtin.command: ssh-keyscan -t {{ _ssh.keyscan_type }} -p {{ port }} {{ host }} | grep -v ^#
  register: keyscan_key_list
  ignore_errors: yes

- name: seed-ssh.create|init _known_host_list
  ansible.builtin.set_fact:
    _known_host_list: []

- name: seed-ssh.create|append ssh fingerprint to _known_host_list
  loop: "{{ keyscan_key_list.results | default([],true) }}"
  loop_control:
    loop_var: keyscan_key_item
  when: keyscan_key_list is not failed
  vars:
    name: "{{ keyscan_key_item.name }}"
    hostname_without_port: "{{ hostvars[name].ansible_host | default(name,true) }}"
    hostname_with_port: "[{{ hostname_without_port }}]:{{ hostvars[name].ansible_port | default(22,true) }}"
    keyscan_original: "{{ keyscan_key_item.stdout }}"
    keyscan_split: "{{ keyscan_original | split(' ') }}"
    keyscan_without_port: "{{ ([hostname_without_port] + keyscan_split[1:]) | join(' ') }}"
    keyscan_with_port: "{{ ([hostname_with_port] + keyscan_split[1:]) | join(' ') }}"
    list_when:
      - when: "{{ hostvars[name].ansible_port | default(22,true) | int == 22 }}"
        item:
          known_name: "{{ hostname_without_port }}"
          known_key: "{{ keyscan_without_port }}"
      - when: "{{ hostvars[name].ansible_port is defined }}"
        item:
          known_name: "{{ hostname_with_port }}"
          known_key: "{{ keyscan_with_port }}"
    append: "{{ list_when | selectattr('when') | map(attribute='item') }}"
  ansible.builtin.set_fact:
    _known_host_list: "{{ _known_host_list + append }}"

- name: seed-ssh.create|append ssh fingerprint to known_hosts
  loop: "{{ _known_host_list }}"
  loop_control:
    loop_var: known_host_item
  when: keyscan_key_list is not failed
  ansible.builtin.known_hosts:
    path: ~/.ssh/known_hosts
    name: "{{ known_host_item.known_name }}"
    key: "{{ known_host_item.known_key }}"
  ignore_errors: yes

- name: seed-ssh.create|reset _ssh
  ansible.builtin.set_fact:
    _ssh: !!null