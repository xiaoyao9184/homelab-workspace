---

- name: seed-ssh.create|check ssh_user
  when: 
    - ssh_user | default(None) == ''
  ansible.builtin.pause:
    prompt: "What is ssh user?"
    echo: true
  register: prompt_ssh_user

- name: seed-ssh.create|check ssh_group
  when: 
    - ssh_group | default(None) == ''
  ansible.builtin.pause:
    prompt: "What is ssh group(also an dir name of ssh key)?"
    echo: true
  register: prompt_ssh_group

- name: seed-ssh.create|set _ssh
  ansible.builtin.set_fact:
    _ssh:
      username: "{{ ssh_user | default(prompt_ssh_user.user_input) }}"
      basename: "{{ ssh_group | default(prompt_ssh_group.user_input) }}"
      ansible_group: "{{ ansible_group | default('ssh',true) }}"
      keyscan_type: "{{ keyscan_type | default('ed25519',true) }}"

# - name: seed-ssh.create|register variable to SEED host
#   ansible.builtin.add_host:
#     name: "SEED"
#     username: "{{ _ssh.username }}"
#     basename: "{{ _ssh.basename }}"

- name: seed-ssh.create|create a directory for ssh
  ansible.builtin.file:
    path: "~/.ssh/{{ _ssh.basename }}/"
    state: directory

- name: seed-ssh.create|generate an OpenSSH keypair rsa 2048
  community.crypto.openssh_keypair:
    path: "~/.ssh/{{ _ssh.basename }}/id_rsa"
    size: 2048
    type: rsa
    comment: "{{ _ssh.basename }}"
  # https://github.com/microsoft/WSL/issues/670
  register: generate_result
  until: "generate_result is not failed"
  retries: 3
  delay: 1

- name: seed-ssh.create|install the package for ssh_config task
  ansible.builtin.pip:
    name: 
      - stormssh
    state: latest
  register: pip_result
  until: "pip_result is not failed"
  retries: 3
  delay: 5

- name: seed-ssh.create|add a host in the configuration
  community.general.ssh_config:
    ssh_config_file: "~/.ssh/config"
    host: "{{ host }}"
    hostname: "{{ host }}"
    remote_user: "{{ _ssh.username }}"
    identity_file: "~/.ssh/{{ _ssh.basename }}/id_rsa"
    # user_known_hosts_file: "~/.ssh/known_hosts"
    state: present
  loop: "{{ groups[_ssh.ansible_group] }}"
  loop_control:
    loop_var: host

- name: seed-ssh.create|get ssh ecdsa fingerprint for host
  ansible.builtin.command: ssh-keyscan -t {{ _ssh.keyscan_type }} {{ host }} | grep -v ^#
  register: keyscan_key_list
  loop: "{{ groups[_ssh.ansible_group] }}"
  loop_control:
    loop_var: host
  ignore_errors: yes

- name: seed-ssh.create|set ssh ecdsa fingerprint to known_hosts
  when: keyscan_key_list is not failed
  ansible.builtin.known_hosts:
    path: ~/.ssh/known_hosts
    name: "{{ keyscan_key_item.host }}"
    key: "{{ keyscan_key_item.stdout }}"
  loop: "{{ keyscan_key_list.results }}"
  loop_control:
    loop_var: keyscan_key_item

- name: seed-ssh.create|print info
  debug:
    msg:
      - "user: {{ lookup('env', 'USER') }}"
      - "path: ~/.ssh/{{ _ssh.basename }}/"
      - "config: ~/.ssh/config"

- name: seed-ssh.create|reset _ssh
  ansible.builtin.set_fact:
    _ssh: !!null