---

# param check
- block:
  - name: seed-docker.run|must seed_ws_dir
    when: 
      - seed_ws_dir is undefined
    fail:
      msg: Not set seed_ws_dir
  - name: seed-docker.run|must anisble_inventory
    when: 
      - anisble_inventory is undefined
    fail:
      msg: Not set anisble_inventory
  - name: seed-docker.run|must anisble_playbook
    when: 
      - anisble_playbook is undefined
    fail:
      msg: Not set anisble_playbook

# param init
- block:
  - name: seed-docker.run|print env
    ansible.builtin.debug:
      msg:
        - "SEED_DETACH: {{ lookup('ansible.builtin.env', 'SEED_DETACH') }}"
        - "SEED_INTERACTIVE: {{ lookup('ansible.builtin.env', 'SEED_INTERACTIVE') }}"
        - "SEED_TTY: {{ lookup('ansible.builtin.env', 'SEED_TTY') }}"
        - "SEED_NAME: {{ lookup('ansible.builtin.env', 'SEED_NAME') }}"
        - "SEED_ENTRYPOINT: {{ lookup('ansible.builtin.env', 'SEED_ENTRYPOINT') }}"
        - "SEED_IMAGE: {{ lookup('ansible.builtin.env', 'SEED_IMAGE') }}"
        - "SEED_COMMAND: {{ lookup('ansible.builtin.env', 'SEED_COMMAND') }}"
        - "SEED_WORKSPACE: {{ lookup('ansible.builtin.env', 'SEED_WORKSPACE') }}"
        - "SEED_WORKSPACE_PATH: {{ lookup('ansible.builtin.env', 'SEED_WORKSPACE_PATH') }}"
        - "SEED_KEY: {{ lookup('ansible.builtin.env', 'SEED_KEY') }}"
        - "SEED_KEY_PATH: {{ lookup('ansible.builtin.env', 'SEED_KEY_PATH') }}"
      verbosity: 3

  - name: seed-docker.run|env param
    ansible.builtin.set_fact:
      seed_detach: "{{ lookup('ansible.builtin.env', 'SEED_DETACH') }}"
      seed_interactive: "{{ lookup('ansible.builtin.env', 'SEED_INTERACTIVE') }}"
      seed_tty: "{{ lookup('ansible.builtin.env', 'SEED_TTY') }}"
      seed_name: "{{ lookup('ansible.builtin.env', 'SEED_NAME') }}"
      seed_entrypoint: "{{ lookup('ansible.builtin.env', 'SEED_ENTRYPOINT') }}"
      seed_image: "{{ lookup('ansible.builtin.env', 'SEED_IMAGE') }}"
      seed_command: "{{ lookup('ansible.builtin.env', 'SEED_COMMAND') }}"
      seed_ws_name: "{{ lookup('ansible.builtin.env', 'SEED_WORKSPACE') }}"
      seed_ws_dir: "{{ lookup('ansible.builtin.env', 'SEED_WORKSPACE_PATH') }}"
      seed_id_name: "{{ lookup('ansible.builtin.env', 'SEED_KEY') }}"
      seed_id_path: "{{ lookup('ansible.builtin.env', 'SEED_KEY_PATH') }}"

  - name: seed-docker.run|default param
    ansible.builtin.set_fact:
      seed_detach: "{{ seed_detach | default('true',true) }}"
      seed_interactive: "{{ seed_interactive | default('false',true) }}"
      seed_tty: "{{ seed_tty | default('false',true) }}"
      seed_name: "{{ seed_name | default('seed-' + 999999999999999999995 | random | to_uuid,true) }}"
      seed_entrypoint: "{{ seed_entrypoint | default('ansible-playbook',true) }}"
      seed_image: "{{ seed_image | default('xiaoyao9184/docker-seed-ansible:latest',true) }}"
      seed_command: "{{ seed_command | default('--version',true) }}"
      seed_ws_dir: "{{ seed_ws_dir | default('/workspace',true) }}"
      seed_id_path: "{{ seed_id_path | default('/key/.ssh/id_rsa',true) }}"
      seed_creator: "{{ seed_name | default('docker-seed-playbook',true) }}"

  - name: seed-docker.run|print param
    ansible.builtin.debug:
      msg:
        - "seed_detach: {{ seed_detach }}"
        - "seed_interactive: {{ seed_interactive }}"
        - "seed_tty: {{ seed_tty }}"
        - "seed_name: {{ seed_name }}"
        - "seed_entrypoint: {{ seed_entrypoint }}"
        - "seed_image: {{ seed_image }}"
        - "seed_command: {{ seed_command }}"
        - "seed_ws_name: {{ seed_ws_name }}"
        - "seed_ws_dir: {{ seed_ws_dir }}"
        - "seed_id_name: {{ seed_id_name }}"
        - "seed_id_path: {{ seed_id_path }}"
      # verbosity: 3

# seed_local
- block:
  - name: seed-docker.run|check in docker-seed with local mode
    when: 
      - lookup('ansible.builtin.env', 'SEED_NAME') != ''
      - ansible_connection == 'local'
    ansible.builtin.set_fact:
      seed_in_docker_connect_local: true
  
  - name: seed-docker.run|set seed_local
    ansible.builtin.set_fact:
      seed_local: "{{ seed_in_docker_connect_local | default(False,true) }}"
      seed_name: "seed-{{ 999999999999999999995 | random | to_uuid }}"

  - name: seed-docker.run|print seed_local
    debug:
      var: seed_local

# seed_volume seed_env
- block:
  - name: seed-docker.run|create seed_env fact
    ansible.builtin.set_fact:
      seed_env: 

  - name: seed-docker.run|create seed_volume fact
    ansible.builtin.set_fact:
      seed_volume: []

  - name: seed-docker.run|workspace seed_volume
    vars:
      seed_ws:
        src: "{{ seed_ws_dir }}"
        name: "{{ seed_ws_name }}"
        exist: false
        dest: "~/.seed/seed/workspace/default"
        map: "/workspace"
    block:
      - name: seed-docker.run|get seed_ws.src stat
        delegate_to: localhost
        connection: local
        ansible.builtin.stat:
          path: "{{ seed_ws.src }}"
        register: ws_src

      - name: seed-docker.run|print seed_ws.src stat
        ansible.builtin.debug:
          var: ws_src.stat.exists
          # verbosity: 3

      - name: seed-docker.run|set seed_ws.name fact
        when:
          - ws_src.stat.exists
          - seed_ws_name == ''
        ansible.builtin.set_fact:
          seed_ws: "{{ seed_ws | combine(seed_ws_update, recursive=True) }}"
        vars:
          seed_ws_update:
            name: "{{ seed_ws_dir | basename }}"

      - name: seed-docker.run|set seed_ws.exist fact
        when:
          - ws_src.stat.exists
          - seed_local
        ansible.builtin.set_fact:
          seed_ws: "{{ seed_ws | combine(seed_ws_update, recursive=True) }}"
        vars:
          seed_ws_update:
            name: "{{ seed_ws_name }}"
            exist: true

      - name: seed-docker.run|set seed_ws.dest fact
        when: 
          - ws_src.stat.exists
          - not seed_ws.exist
        ansible.builtin.set_fact:
          seed_ws: "{{ seed_ws | combine(seed_ws_update, recursive=True) }}"
        vars:
          seed_ws_update:
            dest: "~/.seed/seed/workspace/{{ seed_ws.name }}"

      - name: seed-docker.run|mkdir seed_ws.dest dir
        when: 
          - ws_src.stat.exists
          - not seed_ws.exist
        become: false
        ansible.builtin.file:
          path: "{{ seed_ws.dest }}"
          state: directory

      - name: seed-docker.run|get seed_ws.dest stat
        when: 
          - ws_src.stat.exists
          - not seed_ws.exist
        become: false
        ansible.builtin.stat:
          path: "{{ seed_ws.dest }}"
        register: ws_dest

      - name: seed-docker.run|reset seed_ws.dest fact
        when: 
          - ws_src.stat.exists
          - not seed_ws.exist
        ansible.builtin.set_fact:
          seed_ws: "{{ seed_ws | combine(seed_ws_update, recursive=True) }}"
        vars:
          seed_ws_update:
            dest: "{{ ws_dest.stat.path }}"

      - name: seed-docker.run|sync seed_ws.dest path
        when: 
          - ws_src.stat.exists
          - not seed_ws.exist
        ansible.posix.synchronize:
          src: "{{ seed_ws.src }}/"
          dest: "{{ seed_ws.dest }}"
          delete: yes
          recursive: yes
          checksum: yes
          # https://github.com/ansible/ansible/issues/15297
          rsync_path: rsync

      - name: seed-docker.run|create seed_ws.name volume
        when: 
          - ws_src.stat.exists
          - not seed_ws.exist
        community.docker.docker_volume:
          name: "{{ seed_ws.name }}"
          driver: local
          driver_options:
            type: none
            device: "{{ seed_ws.dest }}"
            o: bind
          labels:
            "com.docker.stack.namespace": "seed-workspace"
            "com.github.xiaoyao9184.docker-seed.creator": "{{ seed_creator }}"

      - name: seed-docker.run|add seed_ws.name seed_volume
        when:
          - ws_src.stat.exists
        ansible.builtin.set_fact:
          seed_volume: "{{ seed_volume + binds }}"
        vars:
          binds:
            - "{{ seed_ws.name }}:{{ seed_ws.map }}"

      - name: seed-docker.run|add seed_ws.name seed_env
        when:
          - ws_src.stat.exists
        ansible.builtin.set_fact:
          seed_env: "{{ seed_env | combine(envs, recursive=True) }}"
        vars:
          envs:
            "SEED_WORKSPACE": "{{ seed_ws.name }}"   

  - name: seed-docker.run|key seed_volume
    vars:
      seed_id:
        src: "{{ seed_id_path }}"
        name: "{{ seed_id_name }}"
        exist: false
        dest: "~/.seed/seed/key/default/id_rsa"
        map: "/root/.ssh/id_rsa"
    block:
      - name: seed-docker.run|get seed_id.src stat
        delegate_to: localhost
        connection: local
        ansible.builtin.stat:
          path: "{{ seed_id.src }}"
          checksum_algorithm: md5
        register: id_src

      - name: seed-docker.run|print seed_id.src stat
        ansible.builtin.debug:
          msg: 
            - "{{ id_src.stat.exists }}"
            - "{{ id_src.stat.checksum | default(None) }}"
          # verbosity: 3

      - name: seed-docker.run|set seed_id.name fact
        when:
          - id_src.stat.exists
          - seed_id_name == ''
        ansible.builtin.set_fact:
          seed_id: "{{ seed_id | combine(seed_id_update, recursive=True) }}"
        vars:
          seed_id_update:
            name: "{{ id_src.stat.checksum }}"

      - name: seed-docker.run|set seed_id.dest fact
        when:
          - id_src.stat.exists
        ansible.builtin.set_fact:
          seed_id: "{{ seed_id | combine(seed_id_update, recursive=True) }}"
        vars:
          seed_id_update:
            dest: "~/.seed/seed/key/{{ seed_id.name }}/id_rsa"

      - name: seed-docker.run|get seed_id.dest stat
        ansible.builtin.stat:
          path: "{{ seed_id.dest }}"
          checksum_algorithm: md5
        register: key_dest

      - name: seed-docker.run|print seed_id.dest stat
        ansible.builtin.debug:
          msg: 
            - "{{ key_dest.stat.exists }}"
            - "{{ key_dest.stat.checksum | default(None) }}"
          # verbosity: 3

      - name: seed-docker.run|set seed_id.exist fact
        when:
          - id_src.stat.exists
          - key_dest.stat.exists
          - id_src.stat.checksum == key_dest.stat.checksum
        ansible.builtin.set_fact:
          seed_id: "{{ seed_id | combine(seed_id_update, recursive=True) }}"
        vars:
          seed_id_update:
            exist: true

      - name: seed-docker.run|mkdir seed_id.dest dir
        when: 
          - id_src.stat.exists
          - not seed_id.exist
        ansible.builtin.file:
          path: "{{ seed_id.dest | dirname }}"
          state: directory

      - name: seed-docker.run|copy seed_id.dest file
        when: 
          - id_src.stat.exists
          - not seed_id.exist
        ansible.builtin.copy:
          src: "{{ seed_id.src }}"
          dest: "{{ seed_id.dest }}"
          owner: root
          group: root
          mode: '0600'

      # in-docker-to-local alway create volume
      - when:
          - id_src.stat.exists
          - seed_local
        block:
          - name: seed-docker.run|set seed_id.exist fact
            ansible.builtin.set_fact:
              seed_id: "{{ seed_id | combine(seed_id_update, recursive=True) }}"
            vars:
              seed_id_update:
                exist: false
        
          - name: seed-docker.run|create seed_id.name volume
            when: 
              - id_src.stat.exists
              - not seed_id.exist
            community.docker.docker_volume:
              name: "{{ seed_id.name }}"
              driver: local
              labels:
                "com.docker.stack.namespace": "seed"
                "com.github.xiaoyao9184.docker-seed.type": "key"
                "com.github.xiaoyao9184.docker-seed.creator": "{{ seed_creator }}"

          - name: seed-docker.run|start seed_id.name container
            community.docker.docker_container:
              name: "key-volume.{{ seed_id.name }}"
              state: started
              image: alpine
              command: "tail -f /dev/null"
              volumes:
                - "{{ seed_id.name }}:/seed_vol"
              labels:
                "com.docker.stack.namespace": "seed"
                "com.github.xiaoyao9184.docker-seed.type": "volume"
                "com.github.xiaoyao9184.docker-seed.creator": "{{ seed_creator }}"
            register: result_key_container
            until: "result_key_container is not failed"
            retries: 1000
            delay: 10

          - name: seed-docker.run|copy seed_id.name container
            ansible.builtin.shell: "docker cp {{ seed_id.dest }} key-volume.{{ seed_id.name }}:/seed_vol"
            
          - name: seed-docker.run|stop seed_id.name container
            community.docker.docker_container:
              name: "key-volume.{{ seed_id.name }}"
              state: stopped

          - name: seed-docker.run|set seed_id.dest fact
            ansible.builtin.set_fact:
              seed_id: "{{ seed_id | combine(seed_id_update, recursive=True) }}"
            vars:
              seed_id_update:
                dest: "{{ seed_id.name }}"
                map: "/root/.ssh"

      - name: seed-docker.run|add seed_id.name seed_volume
        when: 
          - id_src.stat.exists
        ansible.builtin.set_fact:
          seed_volume: "{{ seed_volume + binds }}"
        vars:
          binds:
            - "{{ seed_id.dest }}:{{ seed_id.map }}"

      - name: seed-docker.run|add seed_id.name seed_env
        when:
          - id_src.stat.exists
        ansible.builtin.set_fact:
          seed_env: "{{ seed_env | combine(envs, recursive=True) }}"
        vars:
          envs:
            "SEED_KEY": "{{ seed_id.name }}"

  - name: seed-docker.run|print seed_volume
    ansible.builtin.debug:
      var: seed_volume
      # verbosity: 3

  - name: seed-docker.run|print seed_env
    ansible.builtin.debug:
      var: seed_env
      # verbosity: 3

# param change
- block:
  - name: seed-docker.run|replace ansible command
    when:
      - ws_src.stat.exists
    ansible.builtin.set_fact:
      anisble:
        playbook: "{{ anisble_playbook | replace(seed_ws.src,seed_ws.map) }}"
        inventory: "{{ anisble_inventory | replace(seed_ws.src,seed_ws.map) }}"

  - name: seed-docker.run|change command
    ansible.builtin.set_fact:
      seed_command: "--inventory {{ anisble.inventory }} {{ anisble.playbook }}"

# seed_docker
- block:
  - name: seed-docker.run|set seed_docker fact
    ansible.builtin.set_fact:
      seed_docker:
        detach: "{{ seed_detach }}"
        interactive: "{{ seed_interactive }}"
        tty: "{{ seed_tty }}"
        name: "{{ seed_name }}"
        entrypoint: "{{ seed_entrypoint }}"
        image: "{{ seed_image }}"
        command: "{{ seed_command }}"

  - name: seed-docker.run|print seed_docker fact
    ansible.builtin.debug:
      var: seed_docker

  - name: seed-docker.run|add seed_docker seed_env
    ansible.builtin.set_fact:
      seed_env: "{{ seed_env | combine(envs, recursive=True) }}"
    vars:
      envs:
        "SEED_NAME": "{{ seed_docker.name }}"
        "SEED_ENTRYPOINT": "{{ seed_docker.entrypoint }}"
        "SEED_IMAGE": "{{ seed_docker.image }}"
        "SEED_COMMAND": "{{ seed_docker.command }}"

  - name: seed-docker.run|run seed_docker
    community.docker.docker_container:
      name: "{{ seed_docker.name }}"
      state: started
      # https://stackoverflow.com/questions/40625832/using-ansible-docker-container-how-can-i-display-standard-out-stdout
      timeout: 120
      privileged: true
      user: root
      detach: "{{ seed_docker.detach }}"
      interactive: "{{ seed_docker.interactive }}"
      tty: "{{ seed_docker.tty }}"
      entrypoint: "{{ seed_docker.entrypoint }}"
      image: "{{ seed_docker.image }}"
      command: "{{ seed_docker.command }}"
      env: "{{ seed_env }}"
      volumes: "{{ seed_volume }}"
      mounts:
        - source: "/var/run/docker.sock"
          target: "/var/run/docker.sock"
          type: "bind"
        - source: "/etc/localtime"
          target: "/etc/localtime"
          type: "bind"
          read_only: true
      labels:
        "com.docker.stack.namespace": "seed"
        "com.github.xiaoyao9184.docker-seed.type": "docker"
        "com.github.xiaoyao9184.docker-seed.creator": "{{ seed_creator }}"
    register: seed_result
    ignore_errors: yes

# seed_result
- block:
  - name: seed-docker.run|print seed_docker name
    when: seed_result.failed
    ansible.builtin.debug:
      msg:
        - "Can't get output log, maybe task takes a long time and ansible timeout."
        - "Check log on remote docker: {{ inventory_hostname }} container: {{ seed_docker.name }}."

  - name: seed-docker.run|print seed_docker container
    when: not seed_result.failed
    ansible.builtin.debug:
      var: seed_result
      # verbosity: 3

  - name: seed-docker.run|print seed_docker name
    when:
      - not seed_result.failed
      - seed_docker.detach == 'true'
    ansible.builtin.debug:
      msg:
        - "Check log on remote docker: {{ inventory_hostname }} container: {{ seed_result.container.Name }}."

  - name: seed-docker.run|print seed_docker output
    when:
      - not seed_result.failed
      - seed_docker.detach == 'false'
    # https://stackoverflow.com/questions/34188167/ansible-print-message-debug-msg-line1-n-var2-n-line3-with-var3
    ansible.builtin.pause:
      seconds: 1
      prompt: |

        SEED [{{ seed_result.container.Name }}] //////////////////////////////////////////////////
        {{ seed_result.container.Output }}
        SEED [{{ seed_result.container.Name }}] //////////////////////////////////////////////////