---

- name: set remote_docker
  ansible.builtin.set_fact:
    remote_docker:
      name: "add-pgdb.{{ add_name }}"
      cmd: "-e add_pgdb={{ add_pgdb | to_json | b64encode }} /workspace/ansible-playbook.yml"
      network: "{{ add_network | map('community.general.dict_kv', 'name') }}"
      vol:
        src: "{{ ws_path }}/.seed/ansible-playbook/pgsql-db.add"
        path: "{{ workspace.remote }}/.seed/ansible-playbook/pgsql-db.add"
        name: "pgsql-db.add.{{ add_name }}"

- name: print remote_docker
  ansible.builtin.debug:
    var: remote_docker

- name: volume remote_docker
  include_tasks: "{{ ws_path }}/.seed/ansible-tasks/docker-volume.local.yml"
  vars:
    vol_src: "{{ remote_docker.vol.src }}"
    vol_path: "{{ remote_docker.vol.path }}"
    vol_name: "{{ remote_docker.vol.name }}"

- name: run remote_docker
  community.docker.docker_container:
    name: "{{ remote_docker.name }}"
    state: started
    entrypoint: ansible-playbook
    image: xiaoyao9184/docker-seed-ansible:latest
    command: "{{ remote_docker.cmd }}"
    networks: "{{ remote_docker.network }}"
    volumes:
      - "{{ remote_docker.vol.name }}:/workspace"
    labels:
      "com.docker.stack.namespace": seed
      "com.github.xiaoyao9184.docker-seed.type": "pgsql-db.add"
      "com.github.xiaoyao9184.docker-seed.creator": "{{ lookup('ansible.builtin.env', 'SEED_NAME', default='pgsql-db.add') }}"
  register: result_remote_docker
  until: "result_remote_docker is not failed"
  retries: 1000
  delay: 10
  
- name: loop remote_docker
  include_tasks: "{{ ws_path }}/.seed/ansible-tasks/docker-container.loop.yml"
  vars:
    container_name: "{{ remote_docker.name }}"
