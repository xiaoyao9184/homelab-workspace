---


- name: docker-secret.add|list loop
  when: secret.key is undefined
  block:

    - name: docker-secret.add|set _sec from secret
      ansible.builtin.set_fact:
        _sec: "{{ secret }}"
        # BUG? When different variable in loop include_tasks, run_once set_fact will set all host fact
        _secs_manager: []

- name: docker-secret.add|dict loop
  when: secret.key is defined
  block:

    - name: docker-secret.add|set _sec from secret.value
      ansible.builtin.set_fact:
        _sec: "{{ secret.value | default({},true) }}"
        # BUG? When different variable in loop include_tasks, run_once set_fact will set all host fact
        _secs_manager: []

    - name: docker-secret.add|combine _sec.name form secret.key
      when: _sec.name is undefined
      vars:
        update:
          name: "{{ secret.key }}"
      ansible.builtin.set_fact:
        _sec: "{{ _sec | combine(update, recursive=True) }}"

- name: docker-secret.add|combine _sec.labels form default
  vars:
    update:
      labels:
        "com.docker.stack.namespace": seed
        "com.github.xiaoyao9184.docker-seed.type": "docker-secret.add"
        "com.github.xiaoyao9184.docker-seed.creator": "{{ lookup('ansible.builtin.env', 'SEED_NAME') | default('docker-secret.add',true) }}"
  ansible.builtin.set_fact:
    _sec: "{{ _sec | combine(update, recursive=True) }}"

# Merge multiple docker nodes '_sec' variables when is swarm secret
- name: docker-secret.add|append swarm _secs_manager from each docker host
  run_once: true
  loop: "{{ groups['docker'] }}"
  loop_control:
    loop_var: hostitem
  vars:
    list: "{{ _secs_manager | default([],true) }}"
    append: "{{ [hostvars[hostitem]._sec] if (hostvars[hostitem]._sec | default(None,true) != None) else [] }}"
  ansible.builtin.set_fact:
    _secs_manager: "{{ (list + append) | unique }}"

- name: docker-secret.add|print secret
  run_once: true
  ansible.builtin.debug:
    var: _secs_manager

- name: docker-secret.add|create secret by file
  run_once: true
  delegate_to: "{{ groups['docker-manager'] | first }}"
  loop: "{{ _secs_manager }}"
  loop_control:
    loop_var: item
  when: item.file is defined
  community.docker.docker_secret:
    name: "{{ item.name }}"
    # template_driver: "{{ _sec.template_driver }}"
    data_src: "{{ item.file }}"
    labels: "{{ item.labels }}"

- name: docker-secret.add|create secret by data
  run_once: true
  delegate_to: "{{ groups['docker-manager'] | first }}"
  loop: "{{ _secs_manager }}"
  loop_control:
    loop_var: item
  when: item.data is defined
  community.docker.docker_secret:
    name: "{{ item.name }}"
    # template_driver: "{{ _sec.template_driver }}"
    data: "{{ item.data }}"
    data_is_b64: "{{ item.data_is_b64 | default(false) }}"
    labels: "{{ item.labels }}"

- name: docker-secret.add|reset _sec
  ansible.builtin.set_fact:
    _sec: !!null
    _secs_manager: !!null
