---


- name: run
  vars:
    run_wsl: |
      ansible-playbook \
        --ask-pass \
        --inventory $PWD/ansible \
        $PWD/../../../esxi/seed/remote-ssh.init.yml
  vars_prompt:
    - name: seed_group
      prompt: "What is seed host group(all host use one ssh key)?"
      private: no
      default: 
    - name: seed_user
      prompt: "What is seed host user(all host use one user)?"
      private: no
      default: 
  hosts: localhost
  connection: local
  become: false
  tasks: 

    - include_tasks: "{{ playbook_dir }}/../../.seed/ansible-tasks/seed-ssh.create.yml"
      vars:
        host_group: "{{ seed_group }}"
        remote_user: "{{ seed_user }}"
        ansible_group: "esxi"
        keyscan_type: ssh-rsa


- name: run
  hosts: esxi
  tasks: 

    - name: seed-ssh.approve|init _ssh
      ansible.builtin.set_fact:
        _ssh:
          # get ssh public key path
          pub_path: "~/.ssh/{{ hostvars['SEED']['host_group'] }}/id_rsa.pub"
          remote_user: "{{ hostvars['SEED']['remote_user'] }}"

    - name: seed-ssh.approve|mkdir
      ansible.builtin.file:
        path: "/etc/ssh/keys-{{ _ssh.remote_user}}"
        state: directory

    - name: seed-ssh.approve|ensure authorized keys for remote user is installed
      ansible.builtin.lineinfile:
        path: "/etc/ssh/keys-{{ _ssh.remote_user}}/authorized_keys"
        line: "{{ lookup('file', _ssh.pub_path) }}"
        create: yes
        mode: '0600'

    - name: seed-ssh.approve|reset _ssh
      ansible.builtin.set_fact:
        _ssh: !!null

    - debug: msg="ok of host {{ ansible_host }}"
