---


- name: thin
  vars:
    run_wsl: |
      ansible-playbook \
        --inventory $PWD/ansible \
        $PWD/../../../esxi/vmkfstools/ansible-playbook.thin.yml
  vars_prompt:
    - name: vmkfstools_name
      prompt: "What is vmkfstools or group?"
      private: no
      default: vmkfstools
  hosts: esxi
  tasks: 

    - include_tasks: "{{ playbook_dir }}/../ansible-tasks/config-group.set.yml"
      vars:
        group:
          name: "{{ vmkfstools_name }}"
          all: "{{ esxi.group }}"
          register: vmkfstools_group

    - include_tasks: "{{ playbook_dir }}/../ansible-tasks/config-list.set.yml"
      vars:
        list:
          select: "{{ vmkfstools_group }}"
          all: "{{ esxi.vmkfstools }}"
          register: vmkfstools_list

    - name: set vmkfstools_cmd_list
      ansible.builtin.set_fact:
        vmkfstools_cmd_list: []

    - name: expand file
      loop: "{{ vmkfstools_list }}"
      loop_control:
        loop_var: vmkfstools_item
      when: 
        - vmkfstools_item.file is defined
        - vmkfstools_item.path is defined
      vars:
        file_item: "{{ esxi.file[vmkfstools_item.file] }}"
        datastore_name: "{{ file_item.vsphere_copy.datastore }}"
        datastore_path: "{{ file_item.vsphere_copy.path }}"
        vmkfstools_cmd_item: 
          source: "/vmfs/volumes/{{ datastore_name }}/{{ datastore_path }}"
          target: "{{ vmkfstools_item.path }}"
      ansible.builtin.set_fact:
        vmkfstools_cmd_list: "{{ vmkfstools_cmd_list + [vmkfstools_cmd_item] }}"

    - debug: msg="{{ vmkfstools_cmd_list }}"

    - name: run vmkfstools
      loop: "{{ vmkfstools_cmd_list }}"
      loop_control:
        loop_var: vmkfstools_cmd_item
      ansible.builtin.shell: "vmkfstools -i {{ vmkfstools_cmd_item.source }} {{ vmkfstools_cmd_item.target }} -d thin"
      register: vmkfstools_result

    - debug: msg="{{ vmkfstools_result.results }}"
