---


- name: build
  vars:
    run_debug: |
      ansible-playbook \
        -vvv \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../edgeos/configure-dhcp/shared-network-name/ansible-playbook.build.yml
    run_normal: |
      ansible-playbook \
        --inventory $PWD/ansible-inventories \
        $PWD/../../../edgeos/configure-dhcp/shared-network-name/ansible-playbook.build.yml
  hosts: localhost
  connection: local
  tasks:

    - name: clear build
      ansible.builtin.file:
        path: "{{ playbook_dir }}/build"
        state: absent

    - name: mkdir build
      ansible.builtin.file:
        path: "{{ playbook_dir }}/build"
        state: directory

    - name: run build
      loop: "{{ [ configure.dhcp.csv | default([],true) ] | flatten }}"
      loop_control:
        loop_var: csv
      when: csv.file is defined
      ansible.builtin.shell: "{{ playbook_dir }}/bash.build.sh"
      environment:
        build_path: "{{ playbook_dir }}/build"
        build_name: "configure.sh"
        mapping_csv: "{{ csv.file }}"
        mapping_column: "{{ csv.column | default('location,name,ip,mac',true) | replace(',',' ') }}"
        param_subnet: 192.168.1.0/24
        param_network: LAN

    - name: list build file
      ansible.builtin.find:
        paths: "{{ playbook_dir }}/build"
        file_type: file
        patterns: 'configure*.sh'
      register: build_file

    - name: read build file
      ansible.builtin.shell: "cat {{ item }}"
      register: build_file
      loop: "{{ build_file.files | map(attribute='path') }}"

    - name: print build file
      ansible.builtin.pause:
        seconds: 1
        prompt: |
          {% for result in build_file.results %}
          //////////////////////////////////////////////////
          # {{ result.item }}

          {{ result.stdout }}
          //////////////////////////////////////////////////
          {% endfor %}
